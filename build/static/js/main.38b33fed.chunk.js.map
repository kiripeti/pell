{"version":3,"sources":["components/JkodInput.js","components/Loading.js","components/CustomerTabs.js","components/FormElements/DatePicker.js","components/FormElements/Input.js","components/CustomerBase.js","components/FormElements/RadioButton.js","components/Table.js","components/CustomerIncome.js","components/CustomerBenefits.js","components/CustomerFamily.js","components/Results.js","components/CustomerContent.js","components/CustomerData.js","components/Benefits.js","components/BenefitParams.js","js/utils.js","components/CalculateBenefits.js","components/SettingsTab.js","components/SettingsContent.js","components/Settings.js","App.js","serviceWorker.js","index.js"],"names":["JkodInput","props","style","width","margin","background","border","padding","paddingTop","paddingBottom","paddingLeft","fontSize","value","this","jkod","onChange","event","target","type","size","onClick","className","Component","Loading","message","CustomerTabs","menuItemsDesciptor","CUSTOMER","label","description","INCOME","BENEFIT","FAMILY","RESULT","defaultStyle","borderLeft","selectedStyle","menuItems","Object","keys","map","key","selected","DatePicker","name","date","registerLocale","hu","dateFormat","locale","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","Input","onChangeHandler","isNaN","parsedVal","parseFloat","val","CustomerBase","changeData","property","updateCustomer","id","height","top","position","textAlign","marginTop","valign","align","base","SZUL_DT","dateObject","eu","EU_ALLAPOT","params","KER_TEV_FLG","setParam","NEM","RENDSZ_PENZELL_FLG","colSpan","KMPX_MIN","RadioButton","selectedValue","checked","Table","header","column","data","row","index","generateRow","Date","toLocaleDateString","overflow","generateHeader","generateRows","CustomerIncome","state","aggregation_level","selectedRow","headers","yearly","detailed","new","radioChange","bind","addIncome","removeIncome","setState","newIncome","slice","updateIncome","newRow","forEach","splice","input","parseInt","columnToInput","cellSpacing","cellPadding","whiteSpace","paddingRight","bottom","display","prepareData","CustomerBenefits","benefits","CustomerFamily","addRow","removeRow","newFamily","family","updateFamily","Results","results","CustomerContent","content","alap","ALAP_ADATOK","EU_ADATOK","EV_ELEMZES","JOGVISZONY","ALLSTAT","verticalAlign","textTransform","CustomerData","selectedTab","updateSelectedTab","customer","Benefits","handleChange","renderGroup","groupName","group","filter","benefit","GROUP","rows","i","length","push","Array","fill","e","j","Math","round","ELLATAS_KOD","selectedBenefits","indexOf","ELLATAS_NEV","borderTop","horizontalAlign","groups","BenefitParams","renderParam","param","NAME","TYPE","pairs","OPTIONS","split","pair","LABEL","benefitDescription","benefitParams","fromSasDateTime","sasDate","h54sFromSASdttm","fromSASDate","toSasDateTime","jsDate","h54sToSASdttm","toSASDate","floor","functionOnColumns","table","columns","func","modCols","hasOwnProperty","removeEmptyKeysFromOcjet","obj","dtFromSAS2JS","dttmFromSAS2JS","dtFromJS2SAS","dttmFromJS2SAS","removeEmptyKeys","CalculateBenefits","call","callback","program","loadingMessage","tables","isLoading","sasData","tableNames","tableName","utils","h54s","SasData","addTable","sas","err","res","window","href","console","log","alert","componentDidMount","sort","b1","b2","ORDER","jkodClick","prevState","isCustomerLoaded","alap_adatok","eu_adatok","ev_elemzes","jogviszony","sasDateTime","allstat","UFAZONOSITO","JKOD","calculate","dateParams","names","member","new_income","brm_inputs","result","code","scrollTo","jkodChange","assign","handleBenefitChange","element","LEKERDEZES_DT","DONTES_KIIR","metadataRoot","debug","maxXhrRetries","color","ELLATAS_CD","elem","marginLeft","SettingsTab","tabs","selectTab","SettingsContent","Settings","useState","setSelectedTab","App","selectMenu","selectedMenu","renderMenuItem","linkClass","menuDetailes","menu","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.38b33fed.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass JkodInput extends Component {\n    render(props) {\n      return (\n        <div style={{width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingTop:5, paddingBottom:5}}>\n          <div style={{paddingLeft:20, fontSize:'10pt'}}>\n            Azonosító kód:&nbsp;\n            <input value={this.props.jkod} onChange={(event) => this.props.onChange(event.target.value)} type=\"text\" size=\"10\" style={{paddingLeft:5}} />\n            <input type=\"button\" value=\" Ok \" onClick={this.props.onClick} className=\"button\" />\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default JkodInput;\n","import React from 'react';\n\nconst Loading = ({message}) => (\n  <div className=\"loadingpage\">\n    <div className=\"loading\">\n      <div className=\"loading_txt\">\n        {message}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, {Component, Fragment} from 'react';\n\nclass CustomerTabs extends Component {\n  render(props) {\n    const menuItemsDesciptor = {\n      CUSTOMER: {\n        label: 'Ügyfél',\n        description: 'Az ügyfél alap- és egészségügyi adatok'\n      },\n      INCOME: {\n        label: 'Jogviszony',\n        description: 'Az ügyfél jogviszonyának adatai részletesen és éves bontásban'\n      },\n      BENEFIT: {\n        label: 'Ellátások',\n        description: 'Az ügyfél által igánybe vett ellátások'\n      },\n      FAMILY: {\n        label: 'Családtagok',\n        description: 'Az ügyfél családtagjai'\n      },\n      RESULT: {\n        label: 'Eredmény',\n        description: 'A lekérdezett ellátások eredményei'\n      }\n    };\n\n    const defaultStyle  = {borderLeft: 0, background: 'white'};\n    const selectedStyle = {borderLeft: \"10px solid #DEB306\", background: \"rgba(222,179,6,0.2)\"};\n\n    const menuItems = Object.keys(menuItemsDesciptor).map((key) =>\n      <li key={key} className=\"li_tab\" onClick={() => this.props.onClick(key)}>\n        <div className=\"fold\">\n          <h3 className=\"h3\" style={this.props.selected === key ? selectedStyle : defaultStyle}>{menuItemsDesciptor[key].label}</h3>\n          <p>{menuItemsDesciptor[key].description}</p>\n        </div>\n      </li>\n    );\n\n    return (\n      <Fragment>\n        {menuItems}\n      </Fragment>\n    );\n  }\n}\n\nexport default CustomerTabs;\n","import React from 'react';\nimport ReactDatePicker from \"react-datepicker\";\nimport { registerLocale } from  \"react-datepicker\";\nimport hu from 'date-fns/locale/hu';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePicker = ({name, date, className, onChange}) => {\n  registerLocale('hu', hu);\n\n  return (\n    <ReactDatePicker\n      selected={date}\n      dateFormat='yyyy.MM.dd'\n      locale=\"hu\"\n      className={className ? className : ''}\n      onChange={(date) => onChange({[name]: date})}\n      peekNextMonth\n      showMonthDropdown\n      showYearDropdown\n      dropdownMode=\"select\" />\n  );\n};\n\nexport default DatePicker;\n","import React from 'react'\r\n\r\nconst Input = ({name, value, type, className, onChange}) => {\r\n  let onChangeHandler;\r\n  \r\n  if (type === 'N') {\r\n    onChangeHandler = (event) => {\r\n      if (!isNaN(event.target.value)) {\r\n        const parsedVal = parseFloat(event.target.value);\r\n        const val = isNaN(parsedVal) ? '' : parsedVal;\r\n        onChange(val);\r\n      }\r\n    }\r\n  } else {\r\n    onChangeHandler = (event) => onChange(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name={name}\r\n      className={className}\r\n      value={value}\r\n      onChange={onChangeHandler} />\r\n  );\r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\nimport DatePicker from './FormElements/DatePicker';\nimport Input from './FormElements/Input';\n\nclass CustomerBase extends Component {\n  changeData = (type, property) => ( (event) => this.props.updateCustomer(type, 0, property, event.target.value) );\n\n  render() {\n    return (\n      <div id=\"t1_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'center'}} >\n        <div id=\"data1\" style={{margin:'0px auto', width:'100%', height:'100%', textAlign:'center', background:'white', marginTop:2}}>\n          <table style={{margin:'0 auto', width:'100%', height:'100%'}}>\n            <tbody>\n              <tr>\n                <td valign=\"middle\" align=\"middle\">\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td className=\"cell_property\">Születési idő:</td>\n                        <td className=\"cell_value\">\n                          <DatePicker\n                            name=\"SZUL_DT\"\n                            className=\"cell_input\"\n                            date={this.props.base.SZUL_DT ? this.props.base.SZUL_DT : ''}\n                            onChange={(dateObject) => this.props.updateCustomer('ALAP_ADATOK', 0, 'SZUL_DT', dateObject.SZUL_DT)} />\n                        </td>\n                        <td className=\"cell_spacer\"></td>\n                        <td className=\"cell_property\">Egészségügyi állapot:</td>\n                        <td className=\"cell_value\">\n                          <Input\n                            type=\"N\"\n                            name=\"EU_ALLAPOT\"\n                            className=\"cell_input\"\n                            value={this.props.eu.EU_ALLAPOT != null ? this.props.eu.EU_ALLAPOT : ''}\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'EU_ALLAPOT', value)} />\n                          &nbsp;%\n                        </td>\n                        <td className=\"cell_spacer\"></td>\n                        <td className=\"cell_property\">Kereső tevékenységet végez:</td>\n                        <td className=\"cell_value\">\n                          <select id=\"KER_TEV_FLG\" name=\"KER_TEV_FLG\" className=\"combobox\" size=\"1\" value={this.props.params.KER_TEV_FLG ? this.props.params.KER_TEV_FLG : ''} onChange={(event) => this.props.setParam({KER_TEV_FLG: event.target.value})} >\n                            <option value=\"\"></option>\n                            <option value=\"1\">Igen</option>\n                            <option value=\"0\">Nem</option>\n                          </select>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"cell_property\">Nem:</td>\n                        <td className=\"cell_value\">\n                          <input type=\"text\" name=\"NEM\" className=\"cell_input\" value={this.props.base.NEM ? this.props.base.NEM : ''} onChange={this.changeData('ALAP_ADATOK', 'NEM')} />\n                        </td>\n                        <td className=\"cell_spacer\"></td>\n                        <td className=\"cell_property\">Rehabilitálható flag:</td>\n                        <td className=\"cell_value\">\n                          <Input\n                            type=\"N\"\n                            name=\"REHABILITALHATO_FL\"\n                            className=\"cell_input\"\n                            value={this.props.eu['REHABILITALHATO_FL'] != null ? this.props.eu['REHABILITALHATO_FL'] : ''}\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'REHABILITALHATO_FL', value)} />\n                        </td>\n                        <td className=\"cell_spacer\">\n                        </td>\n                        <td className=\"cell_property\">Rendszeres pénzellátásban részesül:</td>\n                        <td className=\"cell_value\">\n                          <select id=\"RENDSZ_PENZELL_FLG\" name=\"RENDSZ_PENZELL_FLG\" className=\"combobox\" size=\"1\"  value={this.props.params.RENDSZ_PENZELL_FLG ? this.props.params.RENDSZ_PENZELL_FLG : ''} onChange={(event) => this.props.setParam({RENDSZ_PENZELL_FLG: event.target.value})} >\n                            <option></option>\n                            <option value=\"1\">Igen</option>\n                            <option value=\"0\">Nem</option>\n                          </select>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"3\"></td>\n                        <td className=\"cell_property\">Önellátásra képes flag:</td>\n                        <td className=\"cell_value\">\n                          <Input\n                            type=\"N\"\n                            name=\"ONELLATAS_FL\"\n                            className=\"cell_input\"\n                            value={this.props.eu['ONELLATAS_FL'] != null ? this.props.eu['ONELLATAS_FL'] : ''}\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'ONELLATAS_FL', value)} />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"3\"></td>\n                        <td className=\"cell_property\">Komplex minősítés:</td>\n                        <td className=\"cell_value\">\n                          <input type=\"text\" name=\"KMPX_MIN\" className=\"cell_input\" value={this.props.eu.KMPX_MIN ? this.props.eu.KMPX_MIN : ''} onChange={this.changeData('EU_ADATOK', 'KMPX_MIN')} />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerBase;\n","import React from 'react';\n\nconst RadioButton = ({name, label, value, selectedValue, onChange}) => (\n  <label>\n    <input\n      type=\"radio\"\n      name={name}\n      value={value}\n      checked={selectedValue === value}\n      onChange={(event) => onChange(event.target.value)} />\n    {' ' + label}\n  </label>\n);\n\nexport default RadioButton;\n","import React, {Component} from 'react';\r\n\r\nclass Table extends Component {\r\n  generateHeader(header) {\r\n    return header.map( (column) => <td key={column.name} className=\"table_header\">{column.label}</td> );\r\n  }\r\n\r\n  generateRows(header, data) {\r\n    return data.map( (row, index) => this.generateRow(header, row, index) );\r\n  }\r\n\r\n  generateRow(header, row, index) {\r\n    return (\r\n      <tr key={index} className={index%2 === 1 ? 'table_row_alt' : 'table_row'} >\r\n        {header.map( (column) => (\r\n          <td key={column.name+index} className={'table_cell_'+column.align} >\r\n            {row[column.name] instanceof Date ? row[column.name].toLocaleDateString('hu-HU') : row[column.name]}\r\n          </td> \r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <table id={this.props.id} style={{width:'100%', padding:10, overflow:'auto', marginTop:2}} >\r\n        <tbody>\r\n          <tr>\r\n            {this.generateHeader(this.props.header)}\r\n          </tr>\r\n          {this.generateRows(this.props.header, this.props.data)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\nimport RadioButton from './FormElements/RadioButton';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Table from './Table';\r\n\r\nclass CustomerIncome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      aggregation_level: 'yearly',\r\n      selectedRow: 0\r\n    }\r\n\r\n    this.headers ={\r\n      yearly: [\r\n        {name: 'EV',                        align: 'R', label: 'Év'},\r\n        {name: 'ALKMINKOD',                 align: 'L', label: 'ALKMINKOD'},\r\n        {name: 'IRANYITOSZAM',              align: 'C', label: 'IRANYITOSZAM'},\r\n        {name: 'SZOLG_NOK40_NAP',           align: 'R', label: 'SZOLG_NOK40_NAP'},\r\n        {name: 'SZOLG_15_RESZNY',           align: 'R', label: 'SZOLG_15_RESZNY'},\r\n        {name: 'SZOLG_20_TELJ',             align: 'R', label: 'SZOLG_20_TELJ'},\r\n        {name: 'JARULEKALAP',               align: 'R', label: 'JARULEKALAP'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'SZOLG_GOND_DIJ_NAP',        align: 'R', label: 'SZOLG_GOND_DIJ_NAP'},\r\n        {name: 'SZOLG_GOND_SEGELY_NAP',     align: 'R', label: 'SZOLG_GOND_SEGELY_NAP'},\r\n        {name: 'SZOLG_NEVEL_TAM_NAP',       align: 'R', label: 'SZOLG_NEVEL_TAM_NAP'},\r\n        {name: 'SZOLG_APOLASI_DIJ_NAP',     align: 'R', label: 'SZOLG_APOLASI_DIJ_NAP'}\r\n      ],\r\n\r\n      detailed:[\r\n        {name: 'TARGYEV',                   align: 'R', label: 'TARGYEV'},\r\n        {name: 'FOGLALKOZTATO_AZON',        align: 'L', label: 'FOGLALKOZTATO_AZON'},\r\n        {name: 'ALKMIN',                    align: 'L', label: 'ALKMIN'},\r\n        {name: 'ALABONTASKOD',              align: 'L', label: 'ALABONTASKOD'},\r\n        {name: 'ALABONTASERTEK',            align: 'R', label: 'ALABONTASERTEK'},\r\n        {name: 'KEZDESDATUM',               align: 'C', label: 'KEZDESDATUM'},\r\n        {name: 'VEGEDATUM',                 align: 'C', label: 'VEGEDATUM'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'R', label: 'NYUGDIJBIZTOSITASIJARULEK'},\r\n        {name: 'FOJOGVISZONYNAP',           align: 'R', label: 'FOJOGVISZONYNAP'},\r\n        {name: 'MINOSEG_JEL',               align: 'L', label: 'MINOSEG_JEL'},\r\n        {name: 'MUNKAIDO',                  align: 'L', label: 'MUNKAIDO'},\r\n        {name: 'FORRAS_TABLA',              align: 'L', label: 'FORRAS_TABLA'}\r\n      ],\r\n\r\n      new:[\r\n        {name: 'SELECTED',                  align: 'C', label: ''},\r\n        {name: 'JKOD',                      align: 'C', label: 'Aznosító'},\r\n        {name: 'TARGYEV',                   align: 'C', label: 'Tárgyév'},\r\n        {name: 'ALKMIN',                    align: 'L', label: 'ALKMIN'},\r\n        {name: 'KEZDESDATUM',               align: 'C', label: 'Jogviszony kezdete'},\r\n        {name: 'VEGEDATUM',                 align: 'C', label: 'Jogviszony vége'},\r\n        {name: 'OSZTONAP',                  align: 'C', label: 'Osztónap'},\r\n        {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'C', label: 'Jövedelem'}\r\n      ]\r\n    };\r\n\r\n    this.radioChange = this.radioChange.bind(this);\r\n    this.addIncome = this.addIncome.bind(this);\r\n    this.removeIncome = this.removeIncome.bind(this);\r\n  }\r\n\r\n  radioChange(value) {\r\n    this.setState({aggregation_level: value});\r\n  }\r\n\r\n  updateIncome(index, property, value) {\r\n    const newIncome = this.props.new.slice();\r\n    newIncome[index][property] = value;\r\n    this.props.updateIncome(newIncome);\r\n  }\r\n\r\n  addIncome() {\r\n    let newRow = {};\r\n    this.headers.new.forEach((column) => {\r\n      if (column.name !== 'SELECTED') {\r\n        newRow[column.name] = null;\r\n      }\r\n    });\r\n    newRow['JKOD'] = this.props.yearly[0]['JKOD'];\r\n\r\n    this.props.updateIncome([\r\n      newRow,\r\n      ...this.props.new\r\n    ]);\r\n  }\r\n\r\n  removeIncome() {\r\n    const newIncome = this.props.new.slice();\r\n    const index = this.state.selectedRow;\r\n\r\n    newIncome.splice(index, 1);\r\n\r\n    this.props.updateIncome(newIncome);\r\n  }\r\n\r\n  columnToInput(column, index) {\r\n    let input = null;\r\n\r\n    switch (column.name) {\r\n      case 'SELECTED':\r\n        input = (\r\n          <RadioButton\r\n            name=\"selector\"\r\n            value={index}\r\n            selectedValue={this.state.selectedRow}\r\n            label=\"\"\r\n            onChange={(value) => this.setState({selectedRow: parseInt(value)})} />\r\n        );\r\n        break;\r\n      case 'KEZDESDATUM':\r\n      case 'VEGEDATUM':\r\n        input = (\r\n          <DatePicker\r\n            name={column.name}\r\n            date={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(dateObject) => this.updateIncome(index, column.name, dateObject[column.name])} />\r\n        );\r\n        break;\r\n      default:\r\n        input = (\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(event) => this.updateIncome(index, column.name, parseInt(event.target.value))} />\r\n        );\r\n        break;\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  prepareData(aggregation_level) {\r\n    switch (aggregation_level) {\r\n      case 'new':\r\n        return this.props.new.map( (row, index) => {\r\n          let newRow = {};\r\n          this.headers.new.forEach((column) => {\r\n            newRow[column.name] = this.columnToInput(column, index);\r\n          });\r\n          return newRow;\r\n        });\r\n      default:\r\n        return this.props[this.state.aggregation_level];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"t2_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'left'}}>\r\n        <div style={{padding:0, fontSize:'15pt', background:'#ece3c0', marginTop:2, width:\"100%\"}}>\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n            <tbody>\r\n              <tr style={{height:45}}>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"yearly\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Éves összesített adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td className=\"cell_spacer\">\r\n                </td>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"detailed\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Részletes adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td className=\"cell_spacer\">\r\n                </td>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"new\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Jogviszony hozzáadása\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td style={{width:'100%'}} align='right'>\r\n                  {\r\n                    this.state.aggregation_level === 'new' &&\r\n                    <div id=\"btns\" style={{paddingRight:10, paddingBottom:5}}>\r\n                      <input type=\"button\" className=\"button\" value=\" Új jogviszony \" id=\"newRowBtn\" onClick={this.addIncome} />\r\n                      <input type=\"button\" className=\"button_disabled\" value=\" Jogviszony törlése\" id=\"delRowBtn\" onClick={this.removeIncome} />\r\n                    </div>\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"data2_container\" style={{margin:'0px auto', width:'100%', bottom:0, top:40, position:'absolute',  textAlign:'left', overflow:'auto'}} >\r\n          <div style={{height:'100%', padding:0}} >\r\n            <div id=\"data2\" style={{margin:'0px auto', height:'100%', position:'relative', width:'100%', textAlign:'center', overflow:'auto', display:'block'}} >\r\n              <Table header={this.headers[this.state.aggregation_level]} data={this.prepareData(this.state.aggregation_level)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerIncome;\r\n","import React, {Component} from 'react';\nimport Table from './Table';\n\nclass CustomerBenefits extends Component {\n  headers = [\n    {name: 'TSZ',           align: 'C', label: 'TSZ'},\n    {name: 'OSSZK',         align: 'C', label: 'OSSZK'},\n    {name: 'ALFTF',         align: 'C', label: 'ALFTF'},\n    {name: 'SZUL',          align: 'C', label: 'SZUL'},\n    {name: 'SZUN',          align: 'C', label: 'SZUN'},\n    {name: 'NEM',           align: 'C', label: 'NEM'},\n    {name: 'BESZID',        align: 'C', label: 'BESZID'},\n    {name: 'NYIND',         align: 'C', label: 'NYIND'},\n    {name: 'FKOD',          align: 'C', label: 'FKOD'},\n    {name: 'IRSZ',          align: 'C', label: 'IRSZ'},\n    {name: 'HELYSEG',       align: 'C', label: 'HELYSEG'},\n    {name: 'TELAZ',         align: 'C', label: 'TELAZ'},\n    {name: 'JARASKOD',      align: 'C', label: 'JARASKOD'},\n    {name: 'ARVA',          align: 'C', label: 'ARVA'},\n    {name: 'ORSZJ',         align: 'C', label: 'ORSZJ'},\n    {name: 'KSH_MEGYE',     align: 'C', label: 'KSH_MEGYE'},\n    {name: 'KISTERSEG',     align: 'C', label: 'KISTERSEG'},\n    {name: 'STAT_MEGYE',    align: 'C', label: 'STAT_MEGYE'},\n    {name: 'VONHONAP',      align: 'C', label: 'VONHONAP'},\n    {name: 'FORRAS_TABLA',  align: 'C', label: 'FORRAS_TABLA'},\n    {name: 'KIEGFT',        align: 'C', label: 'KIEGFT'},\n    {name: 'KIEGDB',        align: 'C', label: 'KIEGDB'},\n    {name: 'SZULEV',        align: 'C', label: 'SZULEV'}\n  ];\n\n  render(props) {\n    return (\n      <div id=\"t3_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'center'}}>\n        <div id=\"data3\" style={{margin:'0px auto', width:'100%', height:'100%', textAlign:'center', overflow:'auto'}}>\n          <Table header={this.headers} data={this.props.benefits} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerBenefits;\n","import React, {Component} from 'react';\nimport RadioButton from './FormElements/RadioButton';\nimport DatePicker from './FormElements/DatePicker';\nimport Table from './Table';\n\nclass CustomerFamily extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedRow: 0\n    }\n\n    this.headers = [\n      {name: 'SELECTED',     align: 'C', label: ''},\n      {name: 'FAMILY_JKOD',  align: 'C', label: 'Azonosító'},\n      {name: 'SZUL_DT',      align: 'C', label: 'Születési dátum'},\n      {name: 'TYPE',         align: 'C', label: 'Kapcsolat jellege'}\n    ];\n\n    this.addRow = this.addRow.bind(this);\n    this.removeRow = this.removeRow.bind(this);\n  }\n\n  updateFamily(index, property, value) {\n    const newFamily = this.props.family.slice();\n    newFamily[index][property] = value;\n    this.props.updateFamily(newFamily);\n  }\n\n  addRow() {\n    let newRow = {};\n    this.headers.forEach((column) => {\n      if (column.name !== 'SELECTED') {\n        newRow[column.name] = null;\n      }\n    });\n\n    this.props.updateFamily([\n      newRow,\n      ...this.props.family\n    ]);\n  }\n\n  removeRow() {\n    const newFamily = this.props.family.slice();\n    const index = this.state.selectedRow;\n\n    newFamily.splice(index, 1);\n\n    this.props.updateFamily(newFamily);\n  }\n\n  columnToInput(column, index) {\n    let input = null;\n\n    switch (column.name) {\n      case 'SELECTED':\n        input = (\n          <RadioButton\n            name=\"selector\"\n            value={index}\n            selectedValue={this.state.selectedRow}\n            label=\"\"\n            onChange={(value) => this.setState({selectedRow: parseInt(value)})} />\n        );\n        break;\n      case 'FAMILY_JKOD':\n        input = (\n          <input\n            type=\"text\"\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} />\n        );\n        break;\n      case 'SZUL_DT':\n        input = (\n          <DatePicker\n            name={column.name}\n            date={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\n            onChange={(dateObject) => this.updateFamily(index, column.name, dateObject[column.name])} />\n        );\n        break;\n      case 'TYPE':\n        input = (\n          <select\n            name={column.name}\n            className=\"combobox\"\n            style={{width:168, background:'white', border:'1px black solid'}}\n            size=\"1\"\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} >\n            <option></option>\n            <option value=\"1\">Házastárs</option>\n            <option value=\"2\">Gyermek</option>\n          </select>\n        );\n        break;\n      default:\n        input = null;\n    }\n\n    return input;\n  }\n\n  prepareData() {\n    return this.props.family.map( (row, index) => {\n      let newRow = {};\n      this.headers.forEach((column) => {\n        newRow[column.name] = this.columnToInput(column, index);\n      });\n      return newRow;\n    });\n  }\n\n  render(props) {\n    return (\n      <div id=\"t2_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'left'}}>\n        <div style={{padding:0, fontSize:'15pt', background:'#ece3c0', marginTop:2, width:\"100%\"}}>\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\n            <tbody>\n              <tr style={{height:45}}>\n                <td style={{width:'100%'}} align='right'>\n                  <div id=\"btns\" style={{paddingRight:10, paddingBottom:5}}>\n                    <input type=\"button\" className=\"button\" value=\" Új családtag \" id=\"newRowBtn\" onClick={this.addRow} />\n                    <input type=\"button\" className=\"button_disabled\" value=\" Családtag törlése\" id=\"delRowBtn\" onClick={this.removeRow} />\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div id=\"data2_container\" style={{margin:'0px auto', width:'100%', bottom:0, top:40, position:'absolute',  textAlign:'left', overflow:'auto'}} >\n          <div style={{height:'100%', padding:0}} >\n            <div id=\"data2\" style={{margin:'0px auto', height:'100%', position:'relative', width:'100%', textAlign:'center', overflow:'auto', display:'block'}} >\n              <Table header={this.headers} data={this.prepareData()} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerFamily;\n","import React from 'react';\nimport Table from './Table';\n\nconst Results = ({results}) => {\n  const headers = [\n    { name: 'ELLATAS_NM',       align: 'C', label: 'Ellátás neve' },\n    { name: 'ELLATAS_START_DT', align: 'C', label: 'Ellátás Kezdete' },\n    { name: 'ELLATAS_END_DT',   align: 'C', label: 'Ellátás Vége' },\n    { name: 'ELLATAS_DAYS_NUM', align: 'C', label: 'Ellátás hossza' },\n    { name: 'ELLATAS_AMOUNT',   align: 'C', label: 'Ellátás összege' },\n    { name: 'ELLATAS_DESC',     align: 'C', label: 'Megjegyzés' }\n  ];\n\n  return (\n    <div style={{ width: '100%', height: '100%', top: 0, position: 'absolute', textAlign: 'center' }}>\n      <div id=\"output\" style={{ margin: '0px auto', width: '100%', height: '100%', textAlign: 'center', overflow: 'auto' }} >\n        <Table header={headers} data={results} />\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import React, {Component} from 'react';\nimport CustomerBase from './CustomerBase';\nimport CustomerIncome from './CustomerIncome';\nimport CustomerBenefits from './CustomerBenefits';\nimport CustomerFamily from './CustomerFamily';\nimport Results from './Results';\n\nclass CustomerContent extends Component {\n  render(props) {\n    let content = null;\n\n    switch (this.props.selected) {\n      case 'CUSTOMER':\n        const alap = this.props.data.ALAP_ADATOK[0] ? this.props.data.ALAP_ADATOK[0] : {};\n        const eu   = this.props.data.EU_ADATOK[0]   ? this.props.data.EU_ADATOK[0]   : {};\n        content = (\n          <CustomerBase\n            base={alap}\n            eu={eu}\n            updateCustomer={this.props.updateCustomer}\n            setParam={this.props.setParam}\n            params={this.props.params} />\n        );\n        break;\n      case 'INCOME':\n        content = (\n          <CustomerIncome\n            yearly={this.props.data.EV_ELEMZES}\n            detailed={this.props.data.JOGVISZONY}\n            new={this.props.newIncome}\n            updateIncome={this.props.updateIncome} />\n        );\n        break;\n      case 'BENEFIT':\n        content = (\n          <CustomerBenefits\n            benefits={this.props.data.ALLSTAT} />\n        );\n        break;\n      case 'FAMILY':\n        content = (\n          <CustomerFamily\n            family={this.props.family}\n            updateFamily={this.props.updateFamily} />\n        );\n        break;\n      case 'RESULT':\n        content = (\n          <Results\n            results={this.props.results} />\n        );\n        break;\n      default:\n        content = null;\n    }\n\n    return (\n      <div className=\"more\" style={{height:250, verticalAlign:'top', textTransform:'none'}}>\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default CustomerContent;\n","import React, {Component} from 'react';\nimport CustomerTabs from './CustomerTabs';\nimport CustomerContent from './CustomerContent';\n\nclass CustomerData extends Component {\n  render(props) {\n    return (\n      <ul className=\"tabs\" id=\"tab_container\">\n        <CustomerTabs\n          selected={this.props.selectedTab}\n          onClick={this.props.updateSelectedTab} />\n        <CustomerContent\n          selected={this.props.selectedTab}\n          data={this.props.customer}\n          newIncome={this.props.newIncome}\n          updateIncome={this.props.updateIncome}\n          family={this.props.family}\n          updateFamily={this.props.updateFamily}\n          results={this.props.results}\n          updateCustomer={this.props.updateCustomer}\n          setParam={this.props.setParam}\n          params={this.props.params} />\n      </ul>\n    );\n  }\n}\n\nexport default CustomerData;\n","import React, {Component} from 'react';\r\n\r\nclass Benefits extends Component {\r\n  handleChange = (event) => this.props.onChange(event.target.value);\r\n\r\n  renderGroup = (groupName) => {\r\n    const group = this.props.benefits.filter( (benefit) => benefit.GROUP === groupName );\r\n\r\n    let rows = [];\r\n    const elemsInRow=3;\r\n    for (var i = 0; i < group.length; i=i+elemsInRow) {\r\n      rows.push((\r\n        <tr key={groupName+i}>\r\n          {(new Array(elemsInRow)).fill(0).map((e, i) => i).map(j => i+j).filter(j => j<group.length).map(j => (\r\n            <td key={groupName+j} className=\"cell_text\" style={{width: ''+Math.round(100/elemsInRow)+'%'}}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={group[j].ELLATAS_KOD}\r\n                  checked={this.props.selectedBenefits.indexOf(group[j].ELLATAS_KOD) > -1}\r\n                  onChange={this.handleChange} />\r\n                {' '+group[j].ELLATAS_NEV}\r\n              </label>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div key={groupName}>\r\n        <div style={{paddingLeft:20, paddingBottom:8, fontSize:13, textTransform:'uppercase', paddingTop: 10}} >\r\n          {groupName}\r\n        </div>\r\n        <div style={{background:'#fff', padding:5, borderTop:'1px solid #d1d1d1', margin:'0px auto', horizontalAlign:'center'}} >\r\n          <table width=\"100%\" border=\"0\" cellPadding=\"8\" >\r\n            <tbody>\r\n              {rows}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"benefit_container\" style={{position:'relative', top:150, width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingBottom:0}} >\r\n        {\r\n          this.props.benefits.map( (benefit) => benefit.GROUP )\r\n                             .filter( (group, index, groups) => groups.indexOf(group) === index )\r\n                             .map(this.renderGroup)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Benefits;\r\n","import React, {Component} from 'react';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Input from './FormElements/Input';\r\n\r\nclass BenefitParams extends Component {\r\n  renderParam = (param) => {\r\n    if (param.NAME.indexOf('_FLG')>-1 && param.TYPE !== 'S') {\r\n      param.TYPE = 'F';\r\n    }\r\n\r\n    let input = null;\r\n\r\n    switch (param.TYPE) {\r\n      case 'N':\r\n        input = (\r\n          <Input\r\n            type=\"N\"\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            value={this.props.params[param.NAME] != null ? this.props.params[param.NAME] : ''}\r\n            onChange={(value) => this.props.setParam({[param.NAME]: value})} />\r\n        );\r\n        break;\r\n      case 'S':\r\n        const pairs = param.OPTIONS.split(';');\r\n        input = (\r\n          <select\r\n            name={param.NAME}\r\n            className=\"combobox\"\r\n            size=\"1\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(event) => this.props.setParam({[param.NAME]: event.target.value})} >\r\n            <option></option>\r\n            {pairs.map( (pair, index) => (\r\n              <option key={index} value={pair.split(':')[0]}> {pair.split(':')[1]} </option>\r\n            ))}\r\n          </select>\r\n        );\r\n        if (pairs.length > 1) break;\r\n      case 'C':\r\n        input = (\r\n          <Input\r\n            type=\"C\"\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(value) => this.props.setParam({[param.NAME]: value})} />\r\n        );\r\n        break;\r\n      case 'D':\r\n        input = (\r\n          <DatePicker\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            date={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={this.props.setParam} />\r\n        );\r\n        break;\r\n      case 'F':\r\n        input = (\r\n          <select\r\n            name={param.NAME}\r\n            className=\"combobox\"\r\n            size=\"1\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(event) => this.props.setParam({[param.NAME]: event.target.value})} >\r\n            <option></option>\r\n            <option value=\"1\">Igen</option>\r\n            <option value=\"0\">Nem</option>\r\n          </select>\r\n        );\r\n        break;\r\n      default:\r\n        input = null;\r\n    }\r\n\r\n    return (\r\n      <tr key={param.NAME}>\r\n        <td className=\"cell_property_fix\">{param.LABEL}:</td>\r\n        <td className=\"cell_value\">\r\n          {input}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div id=\"rehab_container\" style={{position:'relative', top:180, width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingTop:8, paddingBottom:0}} >\r\n        <div style={{paddingLeft:20, paddingBottom:8, fontSize:13, textTransform:'uppercase'}} >\r\n          {this.props.benefitDescription + ' paraméterei'}\r\n        </div>\r\n        <div style={{background:'#fff', padding:5, borderTop:'1px solid #d1d1d1', margin:'0px auto', horizontalAlign:'center'}} >\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"center\">\r\n                  <table border=\"0\" cellPadding=\"8\" >\r\n                    <tbody>\r\n                      {this.props.benefitParams.map(this.renderParam)}\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BenefitParams;\r\n","import { \r\n  fromSasDateTime as h54sFromSASdttm,\r\n  toSasDateTime as h54sToSASdttm \r\n} from 'h54s';\r\n\r\nconst fromSasDateTime = (sasDate) => sasDate ? h54sFromSASdttm(sasDate) : null;\r\nconst fromSASDate = (sasDate) => sasDate ? fromSasDateTime(sasDate * 24 * 60 * 60) : null;\r\nconst toSasDateTime = (jsDate) => jsDate ? h54sToSASdttm(jsDate) : null;\r\nconst toSASDate = (jsDate) => jsDate ? Math.floor(toSasDateTime(jsDate) / 24 / 60 / 60) : null;\r\n\r\nconst dtFromSAS2JS = (table, columns) => functionOnColumns(table, columns, fromSASDate);\r\nconst dttmFromSAS2JS = (table, columns) => functionOnColumns(table, columns, fromSasDateTime);\r\nconst dtFromJS2SAS = (table, columns) => functionOnColumns(table, columns, toSASDate);\r\nconst dttmFromJS2SAS = (table, columns) => functionOnColumns(table, columns, toSasDateTime);\r\n\r\nconst functionOnColumns = (table, columns, func) => (\r\n  table.map((row, index) => {\r\n    let modCols = {};\r\n\r\n    if (columns === '_ALL_') {\r\n      for (const column in row) {\r\n        if (row.hasOwnProperty(column)) {\r\n          modCols[column] = func(row[column], index);\r\n        }\r\n      }\r\n    } else {\r\n      columns.forEach((column) => {\r\n        if (row.hasOwnProperty(column)) {\r\n          modCols[column] = func(row[column], index);\r\n        }\r\n      });\r\n  }\r\n    return { ...row, ...modCols };\r\n  })\r\n);\r\n\r\nconst removeEmptyKeysFromOcjet = (obj) => {\r\n  for (const key in obj) {\r\n    if (obj[key] == null || obj[key] === '') {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nconst removeEmptyKeys = (obj) => {\r\n  if (obj instanceof Array) {\r\n    return obj.map(removeEmptyKeysFromOcjet);\r\n  } else {\r\n    return removeEmptyKeysFromOcjet(obj)\r\n  }\r\n}\r\n\r\nexport default {\r\n  fromSASDate: fromSASDate,\r\n  fromSasDateTime: fromSasDateTime,\r\n  toSASDate: toSASDate,\r\n  toSasDateTime: toSasDateTime,\r\n  dtFromSAS2JS: dtFromSAS2JS,\r\n  dttmFromSAS2JS: dttmFromSAS2JS,\r\n  dtFromJS2SAS: dtFromJS2SAS,\r\n  dttmFromJS2SAS: dttmFromJS2SAS,\r\n  functionOnColumns: functionOnColumns,\r\n  removeEmptyKeys: removeEmptyKeys\r\n};","import React, { Component, Fragment } from 'react';\r\nimport h54s from 'h54s';\r\n\r\nimport JkodInput from './JkodInput';\r\nimport Loading from './Loading';\r\nimport CustomerData from './CustomerData';\r\nimport Benefits from './Benefits';\r\nimport BenefitParams from './BenefitParams';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport utils from '../js/utils';\r\n\r\nclass CalculateBenefits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      loadingMessage: '',\r\n      isCustomerLoaded: false,\r\n      jkod: '',\r\n      customer: {\r\n        ALAP_ADATOK: [],\r\n        EU_ADATOK: [],\r\n        EV_ELEMZES: [],\r\n        JOGVISZONY: [],\r\n        ALLSTAT: []\r\n      },\r\n      params: {\r\n        LEKERDEZES_DT: new Date(),\r\n        DONTES_KIIR: 1\r\n      },\r\n      selectedBenefits: [],\r\n      benefits: [],\r\n      benefitParams: [],\r\n      selectedTab: 'CUSTOMER',\r\n      newIncome: [],\r\n      family: [],\r\n      results: [],\r\n      brm_inputs: {}\r\n    };\r\n\r\n    this.sas = new h54s({\r\n      metadataRoot:'/PELL/Stored Processes/',\r\n      debug: true,\r\n      maxXhrRetries: 0\r\n    });\r\n  }\r\n\r\n  call = ({ program, loadingMessage, tables }, callback) => {\r\n    this.setState(() => ({\r\n      isLoading: true,\r\n      loadingMessage: loadingMessage ? loadingMessage : 'Kérem várjon'\r\n    }));\r\n\r\n    let sasData = null;\r\n\r\n    if (tables && Object.keys(tables).length > 0) {\r\n      const tableNames = Object.keys(tables);\r\n\r\n      let tableName = tableNames[0];\r\n      let data = utils.removeEmptyKeys(tables[tableName]);\r\n      sasData = new h54s.SasData(data, tableName);\r\n\r\n      for (let i = 1; i < tableNames.length; i++) {\r\n        let tableName = tableNames[i];\r\n        let data = utils.removeEmptyKeys(tables[tableName]);\r\n        sasData.addTable(data, tableName);\r\n      }\r\n    }\r\n\r\n    this.sas.call(program, sasData, (err, res) => {\r\n      this.setState(() => ({\r\n        isLoading: false,\r\n        loadingMessage: ''\r\n      }));\r\n      if (err) {\r\n        if (err.type === 'notLoggedinError') {\r\n          window.href = '/pell';\r\n        }\r\n        console.log(err);\r\n        alert('Hiba lépett fel a feldolgozás során!');\r\n      } else {\r\n        callback(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount = () =>\r\n    this.call({\r\n      program: 'getBenefits',\r\n      loadingMessage: 'Adatok letöltése'\r\n    },\r\n      (res) => this.setState(() => ({\r\n        benefits: res.benefits.sort( (b1, b2) => b1.GROUP < b2.GROUP ? -1 : (b1.ELLATAS_NEV < b2.ELLATAS_NEV ? -1 : 1) ),\r\n        benefitParams: res.benefitParams.sort( (b1, b2) => b1.ORDER - b2.ORDER )\r\n      }))\r\n    );\r\n\r\n  jkodClick = () => {\r\n    const jkod = this.state.jkod;\r\n\r\n    if (jkod === '') return;\r\n\r\n    this.call({\r\n      program: 'getCustomer',\r\n      loadingMessage: 'Ügyfél betöltése',\r\n      tables: { jkod: [{ jkod: jkod }] }\r\n    },\r\n      (res) => {\r\n        //res is an object returned from the server\r\n        this.setState(prevState => ({\r\n          isCustomerLoaded: true,\r\n          customer: {\r\n            ALAP_ADATOK: utils.dtFromSAS2JS(res.alap_adatok, ['SZUL_DT']),\r\n            EU_ADATOK: res.eu_adatok,\r\n            EV_ELEMZES: res.ev_elemzes,\r\n            JOGVISZONY: utils.functionOnColumns(\r\n              res.jogviszony,\r\n              ['KEZDESDATUM', 'VEGEDATUM'],\r\n              (sasDateTime) => utils.fromSasDateTime(sasDateTime).toLocaleDateString('hu-HU')\r\n            ),\r\n            ALLSTAT: res.allstat\r\n          },\r\n          params: { ...prevState.params, ...{ UFAZONOSITO: jkod, JKOD: jkod } }\r\n        }));\r\n      }\r\n    );\r\n  }\r\n\r\n  calculate = () => {\r\n    const dateParams = this.state.benefitParams\r\n      .filter( (param) => param.TYPE === 'D')\r\n      .map( (param) => param.NAME )\r\n      .filter( (name, index, names) => names.indexOf(name) === index );\r\n    \r\n    const family = utils\r\n      .dtFromJS2SAS(this.state.family, ['SZUL_DT'])\r\n      .map((member) => ({\r\n        ...member, ...{['JKOD']: this.state.jkod}\r\n      }));\r\n\r\n    this.call({\r\n      program: 'calculateBenefits',\r\n      loadingMessage: 'Számítás',\r\n      tables: {\r\n        params: utils.dtFromJS2SAS([this.state.params], ['LEKERDEZES_DT', ...dateParams]),\r\n        alap_adatok: utils.dtFromJS2SAS(this.state.customer.ALAP_ADATOK, ['SZUL_DT']),\r\n        eu_adatok: this.state.customer.EU_ADATOK,\r\n        new_income: utils.dttmFromJS2SAS(this.state.newIncome, ['KEZDESDATUM', 'VEGEDATUM']),\r\n        family: family,\r\n        benefits: this.state.selectedBenefits.map((benefit) => ({ benefit: benefit }))\r\n      }\r\n    },\r\n      (res) => {\r\n        let brm_inputs = {};\r\n        let results = utils.dtFromSAS2JS(res.results, ['ELLATAS_START_DT', 'ELLATAS_END_DT']);\r\n\r\n        results = results.map((result) => {\r\n          const code = result['ELLATAS_CD'];\r\n          const name = this.state.benefits.filter((benefit) => benefit['ELLATAS_KOD'] === code)[0]['ELLATAS_NEV'];\r\n\r\n          return {...result, ...{['ELLATAS_NM']: name}};\r\n        });\r\n\r\n        this.state.selectedBenefits.forEach((benefit) => {\r\n          if (res['brm_input_' + benefit]) {\r\n            brm_inputs[benefit] = res['brm_input_' + benefit];\r\n          }\r\n        });\r\n\r\n        window.scrollTo(0, 0);\r\n        this.setState({\r\n          selectedTab: 'RESULT',\r\n          results: results,\r\n          brm_inputs: brm_inputs\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  jkodChange = (jkod) => this.setState(() => ({ jkod: jkod }));\r\n  updateSelectedTab = (value) => this.setState({ selectedTab: value });\r\n  updateIncome = (newIncome) => this.setState(prevState => ({ newIncome: newIncome }));\r\n  updateFamily = (family) => this.setState(prevState => ({ family: family }));\r\n  setParam = (param) => this.setState(state => ({ params: { ...state.params, ...param } }));\r\n\r\n  updateCustomer = (type, index, property, data) =>\r\n    this.setState((state) => {\r\n      let customer = Object.assign({}, state.customer);\r\n      if (!customer[type][index]) {\r\n        customer[type][index] = {};\r\n      }\r\n      customer[type][index][property] = data;\r\n      return { customer: customer };\r\n    });\r\n\r\n  handleBenefitChange = (benefit) => {\r\n    this.setState(prevState => {\r\n      let newState = {};\r\n\r\n      if (prevState.selectedBenefits.indexOf(benefit) > -1) {\r\n        newState = {\r\n          selectedBenefits: prevState.selectedBenefits.filter((element) => element !== benefit)\r\n        };\r\n      } else {\r\n        newState = {\r\n          selectedBenefits: [...prevState.selectedBenefits, benefit].sort()\r\n        };\r\n      }\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Loading message={this.state.loadingMessage} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n      <div className=\"header\">\r\n        <h2 style={{ color: '#CEC7BA', paddingBottom: 25 }}> Egységes ügyfélkép </h2>\r\n        <p style={{ fontSize: '11pt' }}>A jogosultsági történet alapján milyen elletások vehetők igénybe.</p>\r\n      </div>\r\n      <div className=\"request\">\r\n        <JkodInput jkod={this.state.jkod} onChange={this.jkodChange} onClick={this.jkodClick} />\r\n        {\r\n          this.state.isCustomerLoaded &&\r\n          <Fragment>\r\n            <CustomerData\r\n              selectedTab={this.state.selectedTab}\r\n              customer={this.state.customer}\r\n              newIncome={this.state.newIncome}\r\n              family={this.state.family}\r\n              results={this.state.results}\r\n              params={this.state.params}\r\n              updateCustomer={this.updateCustomer}\r\n              updateSelectedTab={this.updateSelectedTab}\r\n              updateIncome={this.updateIncome}\r\n              updateFamily={this.updateFamily}\r\n              setParam={this.setParam} />\r\n            <Benefits\r\n              onChange={this.handleBenefitChange}\r\n              benefits={this.state.benefits}\r\n              selectedBenefits={this.state.selectedBenefits} />\r\n          </Fragment>\r\n        }\r\n        {\r\n          this.state.selectedBenefits.length > 0 &&\r\n          <Fragment>\r\n            {this.state.selectedBenefits.map((benefit) => (\r\n              <BenefitParams\r\n                key={benefit}\r\n                benefit={benefit}\r\n                benefitParams={this.state.benefitParams.filter((param) => param.ELLATAS_CD === benefit)}\r\n                benefitDescription={this.state.benefits.filter((elem) => elem.ELLATAS_KOD === benefit)[0].ELLATAS_NEV}\r\n                params={this.state.params}\r\n                setParam={this.setParam} />\r\n            ))}\r\n\r\n            <div id=\"bottom_container\" style={{ position: 'relative', top: 180, width: '80%', margin: 'auto', background: '#e1e1e1', border: '1px solid #d1d1d1', padding: 0, paddingTop: 8, paddingBottom: 10, paddingLeft: 0 }} >\r\n              <table border=\"0\" cellPadding=\"8\" style={{ marginLeft: 20 }} >\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"cell_text\">Vizsgált időpont:</td>\r\n                    <td className=\"cell_spacer\"></td>\r\n                    <td className=\"cell_text\">\r\n                      <DatePicker\r\n                        name='LEKERDEZES_DT'\r\n                        date={this.state.params.LEKERDEZES_DT}\r\n                        onChange={this.setParam} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\"></td>\r\n                    <td>\r\n                      <input type=\"button\" className=\"button\" style={{ marginLeft: 0 }} value=\" Számol \" onClick={this.calculate} />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Fragment>\r\n        }\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalculateBenefits;\r\n","import React from 'react';\r\n\r\nconst SettingsTab = ({ tabs, selectedTab, selectTab }) => {\r\n  const defaultStyle = { borderLeft: 0, background: 'white' };\r\n  const selectedStyle = { borderLeft: \"10px solid #DEB306\", background: \"rgba(222,179,6,0.2)\" };\r\n\r\n  const menuItems = Object.keys(tabs).map((key) =>\r\n    <li key={key} className=\"li_tab\" onClick={() => selectTab(key)} style={{width:'33%'}}>\r\n      <div className=\"fold\">\r\n        <h3 className=\"h3\" style={selectedTab === key ? selectedStyle : defaultStyle}>{tabs[key].label}</h3>\r\n        <p>{tabs[key].description}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <ul className=\"tabs\" id=\"tab_container\">\r\n      {menuItems}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SettingsTab;","import React from 'react';\r\n\r\nconst SettingsContent = () => null\r\n\r\nexport default SettingsContent;","import React, { useState } from 'react';\r\nimport SettingsTab from './SettingsTab';\r\nimport SettingsContent from './SettingsContent';\r\n\r\nconst Settings = (props) => {\r\n  const [selectedTab, setSelectedTab] = useState('BENEFITS');\r\n\r\n  const menuItems = {\r\n    'BENEFITS': {\r\n      label: 'Ellátások',\r\n      description: 'Ellátások adatai'\r\n    },\r\n    'PARAMS': {\r\n      label: 'Ügyfél inputok',\r\n      description: 'Az ügyfél inputok testre szabása'\r\n    },\r\n    'OTHER': {\r\n      label: 'Egyéb beállítások',\r\n      description: ''\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SettingsTab tabs={menuItems} selectedTab={selectedTab} selectTab={setSelectedTab} />\r\n      <SettingsContent  />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport CalculateBenefits from './components/CalculateBenefits';\r\nimport Settings from './components/Settings';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: ['BENEFIT'],\r\n      menuDetailes: {\r\n        'BENEFIT': {\r\n          label: 'Egységes ügyfélkép'\r\n        },\r\n        'SETTINGS': {\r\n          label: 'Beállítások'\r\n        }\r\n      },\r\n      selectedMenu: 'BENEFIT'\r\n    };\r\n  }\r\n\r\n  selectMenu = (code) => this.setState(() => ({\r\n    selectedMenu: code\r\n  }))\r\n\r\n  content = (code) => {\r\n    switch (code) {\r\n      case 'BENEFIT':\r\n        return <CalculateBenefits />;\r\n\r\n      case 'SETTINGS':\r\n        return <Settings />\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderMenuItem = (code) => {\r\n    const className = code === this.state.selectedMenu\r\n      ? 'nav-item item-210 deeper parent'\r\n      : 'nav-item item-207';\r\n\r\n    const style = code === this.state.selectedMenu\r\n      ? { color: '#deb306' }\r\n      : {};\r\n\r\n    const linkClass = code === this.state.selectedMenu\r\n      ? ''\r\n      : 'nav-link';\r\n\r\n    return (\r\n      <li key={code} className={className}>\r\n        <a style={style} className={linkClass} name={code} onClick={() => this.selectMenu(code)}>\r\n          {this.state.menuDetailes[code].label}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header className=\"navbar navbar-expand-lg navbar-light bg-faded\">\r\n          <div className=\"container\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n              <ul className=\"menu navbar-nav mr-auto\" id=\"mainmenu\" style={{ paddingTop: 2, paddingBottom: 2 }}>\r\n                {this.state.menu.map(this.renderMenuItem)}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"content\">\r\n            {this.content(this.state.selectedMenu)}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}