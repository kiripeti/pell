{"version":3,"sources":["components/JkodInput.js","components/Loading.js","components/CustomerTabs.js","components/FormElements/DatePicker.js","components/FormElements/Input.js","components/CustomerBase.js","components/FormElements/RadioButton.js","components/FormElements/Select.js","components/Table.js","components/CustomerIncome.js","components/CustomerBenefits.js","components/CustomerFamily.js","components/Results.js","components/CustomerContent.js","components/CustomerData.js","components/Benefits.js","components/BenefitParams.js","js/utils.js","components/FormElements/CheckBox.js","components/CalculateBenefits.js","components/Scenario/CustomerTabs.js","components/Scenario/CustomerBase.js","components/Scenario/CustomerIncome.js","components/Scenario/CustomerFamily.js","components/Scenario/CustomerContent.js","components/Scenario/CustomerData.js","components/Scenario/Events.js","components/Scenario/Scenario.js","components/SettingsTab.js","components/SettingsContent.js","components/Settings.js","App.js","serviceWorker.js","index.js"],"names":["JkodInput","props","style","width","margin","background","border","padding","paddingTop","paddingBottom","paddingLeft","fontSize","value","this","jkod","onChange","event","target","type","size","onClick","className","Component","Loading","message","CustomerTabs","menuItemsDesciptor","CUSTOMER","label","description","INCOME","BENEFIT","FAMILY","RESULT","defaultStyle","borderLeft","selectedStyle","menuItems","Object","keys","map","key","selected","DatePicker","name","date","registerLocale","hu","dateFormat","locale","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","Input","onChangeHandler","isNaN","parsedVal","parseFloat","val","CustomerBase","changeData","property","updateCustomer","id","height","top","position","textAlign","marginTop","valign","align","base","SZUL_DT","dateObject","eu","EU_ALLAPOT","params","KER_TEV_FLG","setParam","NEM","RENDSZ_PENZELL_FLG","colSpan","KMPX_MIN","RadioButton","selectedValue","checked","Select","defaultOption","options","index","Table","header","column","data","row","generateRow","Date","toLocaleDateString","overflow","generateHeader","generateRows","CustomerIncome","state","aggregation_level","selectedRow","headers","yearly","detailed","new","radioChange","bind","addIncome","removeIncome","setState","newIncome","slice","updateIncome","newRow","forEach","splice","input","parseInt","columnToInput","cellSpacing","cellPadding","whiteSpace","paddingRight","bottom","display","prepareData","CustomerBenefits","benefits","CustomerFamily","addRow","removeRow","newFamily","family","updateFamily","Results","results","CustomerContent","content","alap","ALAP_ADATOK","EU_ADATOK","EV_ELEMZES","JOGVISZONY","ALLSTAT","verticalAlign","textTransform","CustomerData","selectedTab","updateSelectedTab","customer","Benefits","handleChange","renderGroup","groupName","group","filter","benefit","GROUP","rows","i","length","push","Array","fill","e","j","Math","round","ELLATAS_KOD","selectedBenefits","indexOf","ELLATAS_NEV","borderTop","horizontalAlign","groups","BenefitParams","renderParam","param","NAME","TYPE","pairs","OPTIONS","split","pair","LABEL","benefitDescription","benefitParams","fromSasDateTime","sasDate","h54sFromSASdttm","fromSASDate","toSasDateTime","jsDate","h54sToSASdttm","toSASDate","floor","functionOnColumns","table","columns","func","modCols","hasOwnProperty","removeEmptyKeysFromOcjet","obj","removeEmptyKeys","SAS","sas","h54s","metadataRoot","debug","maxXhrRetries","call","program","tables","preprocess","success","postprocess","isDebug","getOwnPropertyNames","reduce","modTables","tableName","console","log","sasData","SasData","tableNames","addTable","err","res","alert","dtFromSAS2JS","dttmFromSAS2JS","dtFromJS2SAS","dttmFromJS2SAS","CheckBox","CalculateBenefits","callback","loadingMessage","isLoading","utils","window","href","componentDidMount","sort","b1","b2","ORDER","jkodClick","prevState","isCustomerLoaded","alap_adatok","eu_adatok","ev_elemzes","jogviszony","sasDateTime","allstat","UFAZONOSITO","JKOD","calculate","dateParams","names","member","new_income","brm_inputs","result","code","scrollTo","jkodChange","setDebug","bool","setDebugMode","unsetDebugMode","debugChange","assign","handleBenefitChange","element","LEKERDEZES_DT","DONTES_KIIR","color","ELLATAS_CD","elem","marginLeft","Events","getBenefits","events","eventParams","eventBenefits","addEvent","selectedEvent","EVENT_CD","BENEFIT_CD","benefit_params_descriptor","SCEN_FLG","p1","p2","eventList","event_cd","event_desc","EVENT_DESC","event_params","event_params_descriptor","benefit_params","DEFAULT","show_benefit_params","benefitList","eb","flat","array","eventListUpdate","removeEvent","toggleBenefitShow","updateEventList","setBenefitParam","prev","Scenario","order","brm_output","SettingsTab","tabs","selectTab","SettingsContent","reload","save","selectGroup","selectedGroup","selectBenefit","selectedBenefit","filterData","keep","find","getGroupsForSelect","groupObject","getBenefitsForSelect","benefitObject","findIndex","prepareCell","prepareRow","Settings","useState","setSelectedTab","App","selectMenu","selectedMenu","renderMenuItem","linkClass","cursor","menuDetailes","menu","version","pkg","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.84af873d.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass JkodInput extends Component {\n    render(props) {\n      return (\n        <div style={{width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingTop:5, paddingBottom:5}}>\n          <div style={{paddingLeft:20, fontSize:'10pt'}}>\n            Azonosító kód:&nbsp;\n            <input value={this.props.jkod} onChange={(event) => this.props.onChange(event.target.value)} type=\"text\" size=\"10\" style={{paddingLeft:5}} />\n            <input type=\"button\" value=\" Ok \" onClick={this.props.onClick} className=\"button\" />\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default JkodInput;\n","import React from 'react';\n\nconst Loading = ({message}) => (\n  <div className=\"loadingpage\">\n    <div className=\"loading\">\n      <div className=\"loading_txt\">\n        {message}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, {Component, Fragment} from 'react';\n\nclass CustomerTabs extends Component {\n  render(props) {\n    const menuItemsDesciptor = {\n      CUSTOMER: {\n        label: 'Ügyfél',\n        description: 'Az ügyfél alap- és egészségügyi adatok'\n      },\n      INCOME: {\n        label: 'Jogviszony',\n        description: 'Az ügyfél jogviszonyának adatai részletesen és éves bontásban'\n      },\n      BENEFIT: {\n        label: 'Ellátások',\n        description: 'Az ügyfél által igánybe vett ellátások'\n      },\n      FAMILY: {\n        label: 'Családtagok',\n        description: 'Az ügyfél családtagjai'\n      },\n      RESULT: {\n        label: 'Eredmény',\n        description: 'A lekérdezett ellátások eredményei'\n      }\n    };\n\n    const defaultStyle  = {borderLeft: 0, background: 'white'};\n    const selectedStyle = {borderLeft: \"10px solid #DEB306\", background: \"rgba(222,179,6,0.2)\"};\n\n    const menuItems = Object.keys(menuItemsDesciptor).map((key) =>\n      <li key={key} className=\"li_tab\" onClick={() => this.props.onClick(key)}>\n        <div className=\"fold\">\n          <h3 className=\"h3\" style={this.props.selected === key ? selectedStyle : defaultStyle}>{menuItemsDesciptor[key].label}</h3>\n          <p>{menuItemsDesciptor[key].description}</p>\n        </div>\n      </li>\n    );\n\n    return (\n      <Fragment>\n        {menuItems}\n      </Fragment>\n    );\n  }\n}\n\nexport default CustomerTabs;\n","import React from 'react';\nimport ReactDatePicker from \"react-datepicker\";\nimport { registerLocale } from  \"react-datepicker\";\nimport hu from 'date-fns/locale/hu';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePicker = ({name, date, className, onChange}) => {\n  registerLocale('hu', hu);\n\n  return (\n    <ReactDatePicker\n      selected={date}\n      dateFormat='yyyy.MM.dd'\n      locale=\"hu\"\n      className={className ? className : ''}\n      onChange={(date) => onChange({[name]: date})}\n      peekNextMonth\n      showMonthDropdown\n      showYearDropdown\n      dropdownMode=\"select\" />\n  );\n};\n\nexport default DatePicker;\n","import React from 'react'\r\n\r\nconst Input = ({name, value, type, className, onChange}) => {\r\n  let onChangeHandler;\r\n  \r\n  if (type === 'N') {\r\n    onChangeHandler = (event) => {\r\n      if (!isNaN(event.target.value)) {\r\n        const parsedVal = parseFloat(event.target.value);\r\n        const val = isNaN(parsedVal) ? '' : parsedVal;\r\n        onChange(val);\r\n      }\r\n    }\r\n  } else if (type === 'F') {\r\n    onChangeHandler = (event) => {\r\n      if (!isNaN(event.target.value)) {\r\n        const parsedVal = parseFloat(event.target.value);\r\n        const val = isNaN(parsedVal) ? '' : event.target.value;\r\n        onChange(val);\r\n      }\r\n    }\r\n  } else {\r\n    onChangeHandler = (event) => onChange(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name={name}\r\n      className={className}\r\n      value={value}\r\n      onChange={onChangeHandler} />\r\n  );\r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Input from './FormElements/Input';\r\n\r\nclass CustomerBase extends Component {\r\n  changeData = (type, property) => ( (event) => this.props.updateCustomer(type, 0, property, event.target.value) );\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"t1_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'center'}} >\r\n        <div id=\"data1\" style={{margin:'0px auto', width:'100%', height:'100%', textAlign:'center', background:'white', marginTop:2}}>\r\n          <table style={{margin:'0 auto', width:'100%', height:'100%'}}>\r\n            <tbody>\r\n              <tr>\r\n                <td valign=\"middle\" align=\"middle\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"cell_property\">Születési idő:</td>\r\n                        <td className=\"cell_value\">\r\n                          <DatePicker\r\n                            name=\"SZUL_DT\"\r\n                            className=\"cell_input\"\r\n                            date={this.props.base.SZUL_DT ? this.props.base.SZUL_DT : ''}\r\n                            onChange={(dateObject) => this.props.updateCustomer('ALAP_ADATOK', 0, 'SZUL_DT', dateObject.SZUL_DT)} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Egészségügyi állapot:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"EU_ALLAPOT\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu.EU_ALLAPOT != null ? this.props.eu.EU_ALLAPOT : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'EU_ALLAPOT', value)} />\r\n                          &nbsp;%\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Kereső tevékenységet végez:</td>\r\n                        <td className=\"cell_value\">\r\n                          <select id=\"KER_TEV_FLG\" name=\"KER_TEV_FLG\" className=\"combobox\" size=\"1\" value={this.props.params.KER_TEV_FLG ? this.props.params.KER_TEV_FLG : ''} onChange={(event) => this.props.setParam({KER_TEV_FLG: event.target.value})} >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"1\">Igen</option>\r\n                            <option value=\"0\">Nem</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"cell_property\">Nem:</td>\r\n                        <td className=\"cell_value\">\r\n                          <input type=\"text\" name=\"NEM\" className=\"cell_input\" value={this.props.base.NEM ? this.props.base.NEM : ''} onChange={this.changeData('ALAP_ADATOK', 'NEM')} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Rehabilitálható flag:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"REHABILITALHATO_FL\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu['REHABILITALHATO_FL'] != null ? this.props.eu['REHABILITALHATO_FL'] : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'REHABILITALHATO_FL', value)} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\">\r\n                        </td>\r\n                        <td className=\"cell_property\">Rendszeres pénzellátásban részesül:</td>\r\n                        <td className=\"cell_value\">\r\n                          <select id=\"RENDSZ_PENZELL_FLG\" name=\"RENDSZ_PENZELL_FLG\" className=\"combobox\" size=\"1\"  value={this.props.params.RENDSZ_PENZELL_FLG ? this.props.params.RENDSZ_PENZELL_FLG : ''} onChange={(event) => this.props.setParam({RENDSZ_PENZELL_FLG: event.target.value})} >\r\n                            <option></option>\r\n                            <option value=\"1\">Igen</option>\r\n                            <option value=\"0\">Nem</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colSpan=\"3\"></td>\r\n                        <td className=\"cell_property\">Önellátásra képes flag:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"ONELLATAS_FL\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu['ONELLATAS_FL'] != null ? this.props.eu['ONELLATAS_FL'] : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'ONELLATAS_FL', value)} />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colSpan=\"3\"></td>\r\n                        <td className=\"cell_property\">Komplex minősítés:</td>\r\n                        <td className=\"cell_value\">\r\n                          <input type=\"text\" name=\"KMPX_MIN\" className=\"cell_input\" value={this.props.eu.KMPX_MIN ? this.props.eu.KMPX_MIN : ''} onChange={this.changeData('EU_ADATOK', 'KMPX_MIN')} />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerBase;\r\n","import React from 'react';\n\nconst RadioButton = ({name, label, value, selectedValue, onChange}) => (\n  <label>\n    <input\n      type=\"radio\"\n      name={name}\n      value={value}\n      checked={selectedValue === value}\n      onChange={(event) => onChange(event.target.value)} />\n    {' ' + label}\n  </label>\n);\n\nexport default RadioButton;\n","import React from 'react';\r\n\r\nconst Select = ({name, className, value, onChange, defaultOption, options}) =>\r\n  <select\r\n    name={name}\r\n    className={className ? className : ''}\r\n    size=\"1\"\r\n    value={value}\r\n    onChange={(event) => onChange(event.target.value)} >\r\n    <option value={defaultOption ? defaultOption.value : ''}> {defaultOption ? defaultOption.label : ''} </option>\r\n    {Object.keys(options).map((key, index) => (\r\n      <option key={index} value={key}> {options[key]} </option>\r\n    ))}\r\n  </select>\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\n\r\nclass Table extends Component {\r\n  generateHeader(header) {\r\n    return header.map( (column) => <td key={column.name} className=\"table_header\">{column.label}</td> );\r\n  }\r\n\r\n  generateRows(header, data) {\r\n    return data.map( (row, index) => this.generateRow(header, row, index) );\r\n  }\r\n\r\n  generateRow(header, row, index) {\r\n    return (\r\n      <tr key={index} className={index%2 === 1 ? 'table_row_alt' : 'table_row'} >\r\n        {header.map( (column) => (\r\n          <td key={column.name+index} className={'table_cell_'+column.align} >\r\n            {row[column.name] instanceof Date ? row[column.name].toLocaleDateString('hu-HU') : row[column.name]}\r\n          </td> \r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table id={this.props.id} style={{width:'100%', padding:10, overflow:'auto', marginTop:2}} >\r\n        <tbody>\r\n          <tr>\r\n            {this.generateHeader(this.props.header)}\r\n          </tr>\r\n          {this.generateRows(this.props.header, this.props.data)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\nimport RadioButton from './FormElements/RadioButton';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Select from './FormElements/Select';\r\nimport Table from './Table';\r\n\r\nclass CustomerIncome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      aggregation_level: 'yearly',\r\n      selectedRow: 0\r\n    }\r\n\r\n    this.headers ={\r\n      yearly: [\r\n        {name: 'EV',                        align: 'R', label: 'Év'},\r\n        {name: 'ALKMINKOD',                 align: 'L', label: 'ALKMINKOD'},\r\n        {name: 'IRANYITOSZAM',              align: 'C', label: 'IRANYITOSZAM'},\r\n        {name: 'SZOLG_NOK40_NAP',           align: 'R', label: 'SZOLG_NOK40_NAP'},\r\n        {name: 'SZOLG_15_RESZNY',           align: 'R', label: 'SZOLG_15_RESZNY'},\r\n        {name: 'SZOLG_20_TELJ',             align: 'R', label: 'SZOLG_20_TELJ'},\r\n        {name: 'JARULEKALAP',               align: 'R', label: 'JARULEKALAP'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'SZOLG_GOND_DIJ_NAP',        align: 'R', label: 'SZOLG_GOND_DIJ_NAP'},\r\n        {name: 'SZOLG_GOND_SEGELY_NAP',     align: 'R', label: 'SZOLG_GOND_SEGELY_NAP'},\r\n        {name: 'SZOLG_NEVEL_TAM_NAP',       align: 'R', label: 'SZOLG_NEVEL_TAM_NAP'},\r\n        {name: 'SZOLG_APOLASI_DIJ_NAP',     align: 'R', label: 'SZOLG_APOLASI_DIJ_NAP'}\r\n      ],\r\n\r\n      detailed:[\r\n        {name: 'TARGYEV',                   align: 'R', label: 'TARGYEV'},\r\n        {name: 'FOGLALKOZTATO_AZON',        align: 'L', label: 'FOGLALKOZTATO_AZON'},\r\n        {name: 'ALKMIN',                    align: 'L', label: 'ALKMIN'},\r\n        {name: 'ALABONTASKOD',              align: 'L', label: 'ALABONTASKOD'},\r\n        {name: 'ALABONTASERTEK',            align: 'R', label: 'ALABONTASERTEK'},\r\n        {name: 'KEZDESDATUM',               align: 'C', label: 'KEZDESDATUM'},\r\n        {name: 'VEGEDATUM',                 align: 'C', label: 'VEGEDATUM'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'R', label: 'NYUGDIJBIZTOSITASIJARULEK'},\r\n        {name: 'FOJOGVISZONYNAP',           align: 'R', label: 'FOJOGVISZONYNAP'},\r\n        {name: 'MINOSEG_JEL',               align: 'L', label: 'MINOSEG_JEL'},\r\n        {name: 'MUNKAIDO',                  align: 'L', label: 'MUNKAIDO'},\r\n        {name: 'FORRAS_TABLA',              align: 'L', label: 'FORRAS_TABLA'}\r\n      ],\r\n\r\n      new:[\r\n        {name: 'SELECTED',                  align: 'C', label: ''},\r\n        {name: 'JKOD',                      align: 'C', label: 'Aznosító'},\r\n        {name: 'TARGYEV',                   align: 'C', label: 'Tárgyév'},\r\n        {name: 'ALKMIN',                    align: 'C', label: 'ALKMIN'},\r\n        {name: 'KEZDESDATUM',               align: 'C', label: 'Jogviszony kezdete'},\r\n        {name: 'VEGEDATUM',                 align: 'C', label: 'Jogviszony vége'},\r\n        {name: 'OSZTONAP',                  align: 'C', label: 'Osztónap'},\r\n        {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'C', label: 'Jövedelem'},\r\n        {name: 'FORRAS_TABLA',              align: 'C', label: 'Típus'}\r\n      ]\r\n    };\r\n\r\n    this.radioChange = this.radioChange.bind(this);\r\n    this.addIncome = this.addIncome.bind(this);\r\n    this.removeIncome = this.removeIncome.bind(this);\r\n  }\r\n\r\n  radioChange(value) {\r\n    this.setState({aggregation_level: value});\r\n  }\r\n\r\n  updateIncome(index, property, value) {\r\n    const newIncome = this.props.new.slice();\r\n    newIncome[index][property] = value;\r\n    this.props.updateIncome(newIncome);\r\n  }\r\n\r\n  addIncome() {\r\n    let newRow = {};\r\n    this.headers.new.forEach((column) => {\r\n      if (column.name !== 'SELECTED') {\r\n        newRow[column.name] = null;\r\n      }\r\n    });\r\n    newRow['JKOD'] = this.props.yearly[0]['JKOD'];\r\n    newRow['FORRAS_TABLA'] = 'VALODI';\r\n\r\n    this.props.updateIncome([\r\n      newRow,\r\n      ...this.props.new\r\n    ]);\r\n  }\r\n\r\n  removeIncome() {\r\n    const newIncome = this.props.new.slice();\r\n    const index = this.state.selectedRow;\r\n\r\n    newIncome.splice(index, 1);\r\n\r\n    this.props.updateIncome(newIncome);\r\n  }\r\n\r\n  columnToInput(column, index) {\r\n    let input = null;\r\n\r\n    switch (column.name) {\r\n      case 'SELECTED':\r\n        input = (\r\n          <RadioButton\r\n            name=\"selector\"\r\n            value={index}\r\n            selectedValue={this.state.selectedRow}\r\n            label=\"\"\r\n            onChange={(value) => this.setState({selectedRow: parseInt(value)})} />\r\n        );\r\n        break;\r\n      case 'KEZDESDATUM':\r\n      case 'VEGEDATUM':\r\n        input = (\r\n          <DatePicker\r\n            name={column.name}\r\n            date={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(dateObject) => this.updateIncome(index, column.name, dateObject[column.name])} />\r\n        );\r\n        break;\r\n      case 'FORRAS_TABLA':\r\n        input = (\r\n          <Select \r\n            name='FORRAS_TABLA'\r\n            value={this.props.new[index][column.name]}\r\n            onChange={(value) => this.updateIncome(index, column.name, value)}\r\n            options={{\r\n              'VALODI': 'Valódi',\r\n              'PSZEUDO': 'Pszeudó'}}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        input = (\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(event) => this.updateIncome(index, column.name, parseInt(event.target.value))} />\r\n        );\r\n        break;\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  prepareData(aggregation_level) {\r\n    switch (aggregation_level) {\r\n      case 'new':\r\n        return this.props.new.map( (row, index) => {\r\n          let newRow = {};\r\n          this.headers.new.forEach((column) => {\r\n            newRow[column.name] = this.columnToInput(column, index);\r\n          });\r\n          return newRow;\r\n        });\r\n      default:\r\n        return this.props[this.state.aggregation_level];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"t2_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'left'}}>\r\n        <div style={{padding:0, fontSize:'15pt', background:'#ece3c0', marginTop:2, width:\"100%\"}}>\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n            <tbody>\r\n              <tr style={{height:45}}>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"yearly\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Éves összesített adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td className=\"cell_spacer\">\r\n                </td>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"detailed\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Részletes adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td className=\"cell_spacer\">\r\n                </td>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"new\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Jogviszony hozzáadása\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td style={{width:'100%'}} align='right'>\r\n                  {\r\n                    this.state.aggregation_level === 'new' &&\r\n                    <div id=\"btns\" style={{paddingRight:10, paddingBottom:5}}>\r\n                      <input type=\"button\" className=\"button\" value=\" Új jogviszony \" id=\"newRowBtn\" onClick={this.addIncome} />\r\n                      <input type=\"button\" className=\"button_disabled\" value=\" Jogviszony törlése\" id=\"delRowBtn\" onClick={this.removeIncome} />\r\n                    </div>\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"data2_container\" style={{margin:'0px auto', width:'100%', bottom:0, top:40, position:'absolute',  textAlign:'left', overflow:'auto'}} >\r\n          <div style={{height:'100%', padding:0}} >\r\n            <div id=\"data2\" style={{margin:'0px auto', height:'100%', position:'relative', width:'100%', textAlign:'center', overflow:'auto', display:'block'}} >\r\n              <Table header={this.headers[this.state.aggregation_level]} data={this.prepareData(this.state.aggregation_level)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerIncome;\r\n","import React, {Component} from 'react';\nimport Table from './Table';\n\nclass CustomerBenefits extends Component {\n  headers = [\n    {name: 'TSZ',           align: 'C', label: 'TSZ'},\n    {name: 'OSSZK',         align: 'C', label: 'OSSZK'},\n    {name: 'ALFTF',         align: 'C', label: 'ALFTF'},\n    {name: 'SZUL',          align: 'C', label: 'SZUL'},\n    {name: 'SZUN',          align: 'C', label: 'SZUN'},\n    {name: 'NEM',           align: 'C', label: 'NEM'},\n    {name: 'BESZID',        align: 'C', label: 'BESZID'},\n    {name: 'NYIND',         align: 'C', label: 'NYIND'},\n    {name: 'FKOD',          align: 'C', label: 'FKOD'},\n    {name: 'IRSZ',          align: 'C', label: 'IRSZ'},\n    {name: 'HELYSEG',       align: 'C', label: 'HELYSEG'},\n    {name: 'TELAZ',         align: 'C', label: 'TELAZ'},\n    {name: 'JARASKOD',      align: 'C', label: 'JARASKOD'},\n    {name: 'ARVA',          align: 'C', label: 'ARVA'},\n    {name: 'ORSZJ',         align: 'C', label: 'ORSZJ'},\n    {name: 'KSH_MEGYE',     align: 'C', label: 'KSH_MEGYE'},\n    {name: 'KISTERSEG',     align: 'C', label: 'KISTERSEG'},\n    {name: 'STAT_MEGYE',    align: 'C', label: 'STAT_MEGYE'},\n    {name: 'VONHONAP',      align: 'C', label: 'VONHONAP'},\n    {name: 'FORRAS_TABLA',  align: 'C', label: 'FORRAS_TABLA'},\n    {name: 'KIEGFT',        align: 'C', label: 'KIEGFT'},\n    {name: 'KIEGDB',        align: 'C', label: 'KIEGDB'},\n    {name: 'SZULEV',        align: 'C', label: 'SZULEV'}\n  ];\n\n  render(props) {\n    return (\n      <div id=\"t3_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'center'}}>\n        <div id=\"data3\" style={{margin:'0px auto', width:'100%', height:'100%', textAlign:'center', overflow:'auto'}}>\n          <Table header={this.headers} data={this.props.benefits} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerBenefits;\n","import React, { Component } from 'react';\r\nimport RadioButton from './FormElements/RadioButton';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Table from './Table';\r\n\r\nclass CustomerFamily extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedRow: 0\r\n    }\r\n\r\n    this.headers = [\r\n      {name: 'SELECTED',     align: 'C', label: ''},\r\n      {name: 'FAMILY_JKOD',  align: 'C', label: 'Azonosító'},\r\n      {name: 'SZUL_DT',      align: 'C', label: 'Születési dátum'},\r\n      {name: 'TYPE',         align: 'C', label: 'Kapcsolat jellege'}\r\n    ];\r\n\r\n    this.addRow = this.addRow.bind(this);\r\n    this.removeRow = this.removeRow.bind(this);\r\n  }\r\n\r\n  updateFamily(index, property, value) {\r\n    const newFamily = this.props.family.slice();\r\n    newFamily[index][property] = value;\r\n    this.props.updateFamily(newFamily);\r\n  }\r\n\r\n  addRow() {\r\n    let newRow = {};\r\n    this.headers.forEach((column) => {\r\n      if (column.name !== 'SELECTED') {\r\n        newRow[column.name] = null;\r\n      }\r\n    });\r\n\r\n    this.props.updateFamily([\r\n      newRow,\r\n      ...this.props.family\r\n    ]);\r\n  }\r\n\r\n  removeRow() {\r\n    const newFamily = this.props.family.slice();\r\n    const index = this.state.selectedRow;\r\n\r\n    newFamily.splice(index, 1);\r\n\r\n    this.props.updateFamily(newFamily);\r\n  }\r\n\r\n  columnToInput(column, index) {\r\n    let input = null;\r\n\r\n    switch (column.name) {\r\n      case 'SELECTED':\r\n        input = (\r\n          <RadioButton\r\n            name=\"selector\"\r\n            value={index}\r\n            selectedValue={this.state.selectedRow}\r\n            label=\"\"\r\n            onChange={(value) => this.setState({ selectedRow: parseInt(value) })} />\r\n        );\r\n        break;\r\n      case 'FAMILY_JKOD':\r\n        input = (\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} />\r\n        );\r\n        break;\r\n      case 'SZUL_DT':\r\n        input = (\r\n          <DatePicker\r\n            name={column.name}\r\n            date={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(dateObject) => this.updateFamily(index, column.name, dateObject[column.name])} />\r\n        );\r\n        break;\r\n      case 'TYPE':\r\n        input = (\r\n          <select\r\n            name={column.name}\r\n            className=\"combobox\"\r\n            style={{ width: 168, background: 'white', border: '1px black solid' }}\r\n            size=\"1\"\r\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} >\r\n            <option></option>\r\n            <option value=\"1\">Szülő</option>\r\n            <option value=\"2\">Házastárs</option>\r\n            <option value=\"3\">Gyermek</option>\r\n          </select>\r\n        );\r\n        break;\r\n      default:\r\n        input = null;\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  prepareData() {\r\n    return this.props.family.map((row, index) => {\r\n      let newRow = {};\r\n      this.headers.forEach((column) => {\r\n        newRow[column.name] = this.columnToInput(column, index);\r\n      });\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div id=\"t2_content\" style={{ width: '100%', height: '100%', top: 0, position: 'absolute', textAlign: 'left' }}>\r\n        <div style={{ padding: 0, fontSize: '15pt', background: '#ece3c0', marginTop: 2, width: \"100%\" }}>\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n            <tbody>\r\n              <tr style={{ height: 45 }}>\r\n                <td style={{ width: '100%' }} align='right'>\r\n                  <div id=\"btns\" style={{ paddingRight: 10, paddingBottom: 5 }}>\r\n                    <input type=\"button\" className=\"button\" value=\" Új családtag \" id=\"newRowBtn\" onClick={this.addRow} />\r\n                    <input type=\"button\" className=\"button_disabled\" value=\" Családtag törlése\" id=\"delRowBtn\" onClick={this.removeRow} />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"data2_container\" style={{ margin: '0px auto', width: '100%', bottom: 0, top: 40, position: 'absolute', textAlign: 'left', overflow: 'auto' }} >\r\n          <div style={{ height: '100%', padding: 0 }} >\r\n            <div id=\"data2\" style={{ margin: '0px auto', height: '100%', position: 'relative', width: '100%', textAlign: 'center', overflow: 'auto', display: 'block' }} >\r\n              <Table header={this.headers} data={this.prepareData()} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerFamily;\r\n","import React from 'react';\nimport Table from './Table';\n\nconst Results = ({results}) => {\n  const headers = [\n    { name: 'ELLATAS_NM',       align: 'C', label: 'Ellátás neve' },\n    { name: 'ELLATAS_START_DT', align: 'C', label: 'Ellátás Kezdete' },\n    { name: 'ELLATAS_END_DT',   align: 'C', label: 'Ellátás Vége' },\n    { name: 'ELLATAS_DAYS_NUM', align: 'C', label: 'Ellátás hossza' },\n    { name: 'ELLATAS_AMOUNT',   align: 'C', label: 'Ellátás összege' },\n    { name: 'ELLATAS_DESC',     align: 'C', label: 'Megjegyzés' }\n  ];\n\n  return (\n    <div style={{ width: '100%', height: '100%', top: 0, position: 'absolute', textAlign: 'center' }}>\n      <div id=\"output\" style={{ margin: '0px auto', width: '100%', height: '100%', textAlign: 'center', overflow: 'auto' }} >\n        <Table header={headers} data={results} />\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import React, { Component } from 'react';\r\nimport CustomerBase from './CustomerBase';\r\nimport CustomerIncome from './CustomerIncome';\r\nimport CustomerBenefits from './CustomerBenefits';\r\nimport CustomerFamily from './CustomerFamily';\r\nimport Results from './Results';\r\n\r\nclass CustomerContent extends Component {\r\n  render(props) {\r\n    let content = null;\r\n\r\n    switch (this.props.selected) {\r\n      case 'CUSTOMER':\r\n        const alap = this.props.data.ALAP_ADATOK[0] ? this.props.data.ALAP_ADATOK[0] : {};\r\n        const eu = this.props.data.EU_ADATOK[0] ? this.props.data.EU_ADATOK[0] : {};\r\n        content = (\r\n          <CustomerBase\r\n            base={alap}\r\n            eu={eu}\r\n            updateCustomer={this.props.updateCustomer}\r\n            setParam={this.props.setParam}\r\n            params={this.props.params} />\r\n        );\r\n        break;\r\n      case 'INCOME':\r\n        content = (\r\n          <CustomerIncome\r\n            yearly={this.props.data.EV_ELEMZES}\r\n            detailed={this.props.data.JOGVISZONY}\r\n            new={this.props.newIncome}\r\n            updateIncome={this.props.updateIncome} />\r\n        );\r\n        break;\r\n      case 'BENEFIT':\r\n        content = (\r\n          <CustomerBenefits\r\n            benefits={this.props.data.ALLSTAT} />\r\n        );\r\n        break;\r\n      case 'FAMILY':\r\n        content = (\r\n          <CustomerFamily\r\n            family={this.props.family}\r\n            updateFamily={this.props.updateFamily} />\r\n        );\r\n        break;\r\n      case 'RESULT':\r\n        content = (\r\n          <Results\r\n            results={this.props.results} />\r\n        );\r\n        break;\r\n      default:\r\n        content = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"more\" style={{ height: 400, verticalAlign: 'top', textTransform: 'none' }}>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerContent;\r\n","import React, {Component} from 'react';\nimport CustomerTabs from './CustomerTabs';\nimport CustomerContent from './CustomerContent';\n\nclass CustomerData extends Component {\n  render(props) {\n    return (\n      <ul className=\"tabs\" id=\"tab_container\">\n        <CustomerTabs\n          selected={this.props.selectedTab}\n          onClick={this.props.updateSelectedTab} />\n        <CustomerContent\n          selected={this.props.selectedTab}\n          data={this.props.customer}\n          newIncome={this.props.newIncome}\n          updateIncome={this.props.updateIncome}\n          family={this.props.family}\n          updateFamily={this.props.updateFamily}\n          results={this.props.results}\n          updateCustomer={this.props.updateCustomer}\n          setParam={this.props.setParam}\n          params={this.props.params} />\n      </ul>\n    );\n  }\n}\n\nexport default CustomerData;\n","import React, {Component} from 'react';\r\n\r\nclass Benefits extends Component {\r\n  handleChange = (event) => this.props.onChange(event.target.value);\r\n\r\n  renderGroup = (groupName) => {\r\n    const group = this.props.benefits.filter( (benefit) => benefit.GROUP === groupName );\r\n\r\n    let rows = [];\r\n    const elemsInRow=3;\r\n    for (var i = 0; i < group.length; i=i+elemsInRow) {\r\n      rows.push((\r\n        <tr key={groupName+i}>\r\n          {(new Array(elemsInRow)).fill(0).map((e, i) => i).map(j => i+j).filter(j => j<group.length).map(j => (\r\n            <td key={groupName+j} className=\"cell_text\" style={{width: ''+Math.round(100/elemsInRow)+'%'}}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={group[j].ELLATAS_KOD}\r\n                  checked={this.props.selectedBenefits.indexOf(group[j].ELLATAS_KOD) > -1}\r\n                  onChange={this.handleChange} />\r\n                {' '+group[j].ELLATAS_NEV}\r\n              </label>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div key={groupName}>\r\n        <div style={{paddingLeft:20, paddingBottom:8, fontSize:13, textTransform:'uppercase', paddingTop: 10}} >\r\n          {groupName}\r\n        </div>\r\n        <div style={{background:'#fff', padding:5, borderTop:'1px solid #d1d1d1', margin:'0px auto', horizontalAlign:'center'}} >\r\n          <table width=\"100%\" border=\"0\" cellPadding=\"8\" >\r\n            <tbody>\r\n              {rows}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"benefit_container\" style={{position:'relative', top:150, width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingBottom:0}} >\r\n        {\r\n          this.props.benefits.map( (benefit) => benefit.GROUP )\r\n                             .filter( (group, index, groups) => groups.indexOf(group) === index )\r\n                             .map(this.renderGroup)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Benefits;\r\n","import React, {Component} from 'react';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport Input from './FormElements/Input';\r\n\r\nclass BenefitParams extends Component {\r\n  renderParam = (param) => {\r\n    if (param.NAME.indexOf('_FLG')>-1 && param.TYPE !== 'S') {\r\n      param.TYPE = 'FL';\r\n    }\r\n\r\n    let input = null;\r\n\r\n    switch (param.TYPE) {\r\n      case 'N':\r\n        input = (\r\n          <Input\r\n            type=\"N\"\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            value={this.props.params[param.NAME] != null ? this.props.params[param.NAME] : ''}\r\n            onChange={(value) => this.props.setParam({[param.NAME]: value})} />\r\n        );\r\n        break;\r\n      case 'F':\r\n        input = (\r\n          <Input\r\n            type=\"F\"\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            value={this.props.params[param.NAME] != null ? this.props.params[param.NAME] : ''}\r\n            onChange={(value) => this.props.setParam({[param.NAME]: value})} />\r\n        );\r\n        break;\r\n      case 'S':\r\n        const pairs = param.OPTIONS.split(';');\r\n        input = (\r\n          <select\r\n            name={param.NAME}\r\n            className=\"combobox\"\r\n            size=\"1\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(event) => this.props.setParam({[param.NAME]: event.target.value})} >\r\n            <option></option>\r\n            {pairs.map( (pair, index) => (\r\n              <option key={index} value={pair.split(':')[0]}> {pair.split(':')[1]} </option>\r\n            ))}\r\n          </select>\r\n        );\r\n        if (pairs.length > 1) break;\r\n      case 'C':\r\n        input = (\r\n          <Input\r\n            type=\"C\"\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(value) => this.props.setParam({[param.NAME]: value})} />\r\n        );\r\n        break;\r\n      case 'D':\r\n        input = (\r\n          <DatePicker\r\n            name={param.NAME}\r\n            className=\"cell_input\"\r\n            date={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={this.props.setParam} />\r\n        );\r\n        break;\r\n      case 'FL':\r\n        input = (\r\n          <select\r\n            name={param.NAME}\r\n            className=\"combobox\"\r\n            size=\"1\"\r\n            value={this.props.params[param.NAME] ? this.props.params[param.NAME] : ''}\r\n            onChange={(event) => this.props.setParam({[param.NAME]: event.target.value})} >\r\n            <option></option>\r\n            <option value=\"1\">Igen</option>\r\n            <option value=\"0\">Nem</option>\r\n          </select>\r\n        );\r\n        break;\r\n      default:\r\n        input = null;\r\n    }\r\n\r\n    return (\r\n      <tr key={param.NAME}>\r\n        <td className=\"cell_property_fix\">{param.LABEL}:</td>\r\n        <td className=\"cell_value\">\r\n          {input}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const top = this.props.top ? this.props.top : 180;\r\n    return (\r\n      <div id=\"rehab_container\" style={{position:'relative', top: top, width:'80%', margin:'auto', background:'#e1e1e1', border:'1px solid #d1d1d1', padding:0, paddingTop:8, paddingBottom:0}} >\r\n        <div style={{paddingLeft:20, paddingBottom:8, fontSize:13, textTransform:'uppercase'}} >\r\n          {this.props.benefitDescription + ' paraméterei'}\r\n        </div>\r\n        <div style={{background:'#fff', padding:5, borderTop:'1px solid #d1d1d1', margin:'0px auto', horizontalAlign:'center'}} >\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"center\">\r\n                  <table border=\"0\" cellPadding=\"8\" >\r\n                    <tbody>\r\n                      {this.props.benefitParams.map(this.renderParam)}\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BenefitParams;\r\n","import h54s, {\r\n  fromSasDateTime as h54sFromSASdttm,\r\n  toSasDateTime as h54sToSASdttm\r\n} from 'h54s';\r\n\r\nimport customer_data from '../test_data/ugyfel_adat';\r\nimport { benefits } from '../test_data/benefits';\r\nimport { events } from '../test_data/getEvents';\r\n\r\nconst dev = false;\r\n\r\nconst fromSasDateTime = (sasDate) => sasDate ? h54sFromSASdttm(sasDate) : null;\r\nconst fromSASDate = (sasDate) => sasDate ? fromSasDateTime(sasDate * 24 * 60 * 60) : null;\r\nconst toSasDateTime = (jsDate) => jsDate ? h54sToSASdttm(jsDate) : null;\r\nconst toSASDate = (jsDate) => jsDate ? Math.floor(toSasDateTime(jsDate) / 24 / 60 / 60) : null;\r\n\r\nconst dtFromSAS2JS = (table, columns) => functionOnColumns(table, columns, fromSASDate);\r\nconst dttmFromSAS2JS = (table, columns) => functionOnColumns(table, columns, fromSasDateTime);\r\nconst dtFromJS2SAS = (table, columns) => functionOnColumns(table, columns, toSASDate);\r\nconst dttmFromJS2SAS = (table, columns) => functionOnColumns(table, columns, toSasDateTime);\r\n\r\nconst functionOnColumns = (table, columns, func) => (\r\n  table.map((row, index) => {\r\n    let modCols = {};\r\n\r\n    if (columns === '_ALL_') {\r\n      for (const column in row) {\r\n        if (row.hasOwnProperty(column)) {\r\n          modCols[column] = func(row[column], index);\r\n        }\r\n      }\r\n    } else {\r\n      columns.forEach((column) => {\r\n        if (row.hasOwnProperty(column)) {\r\n          modCols[column] = func(row[column], index);\r\n        }\r\n      });\r\n    }\r\n    return { ...row, ...modCols };\r\n  })\r\n);\r\n\r\nconst dtFromJS2SASAllColumn = (table) => functionOnColumns(table, '_ALL_', (value) => value instanceof Date ? toSASDate(value) : value)\r\n\r\nconst removeEmptyKeysFromOcjet = (obj) => {\r\n  for (const key in obj) {\r\n    if (obj[key] == null || obj[key] === '') {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nconst removeEmptyKeys = (obj) => {\r\n  if (obj instanceof Array) {\r\n    return obj.map(removeEmptyKeysFromOcjet);\r\n  } else {\r\n    return removeEmptyKeysFromOcjet(obj)\r\n  }\r\n}\r\n\r\nconst action = {\r\n  'getCustomer': customer_data,\r\n  'getBenefits': benefits,\r\n  'getEvents': events\r\n};\r\n\r\nexport class SAS {\r\n  sas = new h54s({\r\n    metadataRoot: '/PELL/Stored Processes/',\r\n    debug: true,\r\n    maxXhrRetries: 0\r\n  });\r\n\r\n  call = ({ program, tables, preprocess, success, postprocess, isDebug }) => {\r\n    tables = tables ? Object.getOwnPropertyNames(tables)\r\n      .reduce((modTables, tableName) => ({\r\n        ...modTables,\r\n        [tableName]: dtFromJS2SASAllColumn(tables[tableName])\r\n      }), {}) : null;\r\n\r\n    if (isDebug) console.log('tables', tables);\r\n\r\n    if (preprocess) preprocess();\r\n\r\n    let sasData = new h54s.SasData([{ debug: isDebug ? 1 : 0 }], 'debug');\r\n\r\n    if (tables && Object.keys(tables).length > 0) {\r\n      const tableNames = Object.keys(tables);\r\n\r\n      for (let i = 0; i < tableNames.length; i++) {\r\n        let tableName = tableNames[i];\r\n        let data = removeEmptyKeys(tables[tableName]);\r\n        sasData.addTable(data, tableName);\r\n      }\r\n    }\r\n\r\n    this.sas.call(program, sasData, (err, res) => {\r\n      if (dev) {\r\n        success(action[program])\r\n      } else {\r\n        if (err) {\r\n          if (err.type === 'notLoggedinError') {\r\n            alert('A munkamenet lejárt! Frissítse az oldalt a bejelentkezéshez.');\r\n          } else {\r\n            console.log(err);\r\n            alert('Hiba lépett fel a feldolgozás során!');\r\n          }\r\n        } else {\r\n          if (isDebug) console.log('response', res);\r\n          success(res);\r\n        }\r\n\r\n      }\r\n\r\n      if (postprocess) postprocess();\r\n    });\r\n  }\r\n}\r\n\r\nexport default {\r\n  fromSASDate: fromSASDate,\r\n  fromSasDateTime: fromSasDateTime,\r\n  toSASDate: toSASDate,\r\n  toSasDateTime: toSasDateTime,\r\n  dtFromSAS2JS: dtFromSAS2JS,\r\n  dttmFromSAS2JS: dttmFromSAS2JS,\r\n  dtFromJS2SAS: dtFromJS2SAS,\r\n  dttmFromJS2SAS: dttmFromJS2SAS,\r\n  functionOnColumns: functionOnColumns,\r\n  removeEmptyKeys: removeEmptyKeys\r\n};","import React from 'react';\r\n\r\nconst CheckBox = ({ name, checked, label, className, onChange }) => (\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      name={name}\r\n      className={className ? className : ''}\r\n      checked={checked}\r\n      onChange={event => onChange(event.target.checked)} />\r\n    {' ' + label}\r\n  </label>\r\n);\r\n\r\nexport default CheckBox;","import React, { Component, Fragment } from 'react';\r\nimport h54s from 'h54s';\r\n\r\nimport JkodInput from './JkodInput';\r\nimport Loading from './Loading';\r\nimport CustomerData from './CustomerData';\r\nimport Benefits from './Benefits';\r\nimport BenefitParams from './BenefitParams';\r\nimport DatePicker from './FormElements/DatePicker';\r\nimport utils from '../js/utils';\r\nimport CheckBox from './FormElements/CheckBox';\r\n\r\nclass CalculateBenefits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      loadingMessage: '',\r\n      isCustomerLoaded: false,\r\n      jkod: '',\r\n      customer: {\r\n        ALAP_ADATOK: [],\r\n        EU_ADATOK: [],\r\n        EV_ELEMZES: [],\r\n        JOGVISZONY: [],\r\n        ALLSTAT: []\r\n      },\r\n      params: {\r\n        LEKERDEZES_DT: new Date(),\r\n        DONTES_KIIR: 1\r\n      },\r\n      selectedBenefits: [],\r\n      benefits: [],\r\n      benefitParams: [],\r\n      selectedTab: 'CUSTOMER',\r\n      newIncome: [],\r\n      family: [],\r\n      results: [],\r\n      brm_inputs: {}\r\n    };\r\n\r\n    this.sas = new h54s({\r\n      metadataRoot: '/PELL/Stored Processes/',\r\n      debug: this.props.isDebug,\r\n      maxXhrRetries: 0\r\n    });\r\n  }\r\n\r\n  call = ({ program, loadingMessage, tables }, callback) => {\r\n    this.setState(() => ({\r\n      isLoading: true,\r\n      loadingMessage: loadingMessage ? loadingMessage : 'Kérem várjon'\r\n    }));\r\n\r\n    let sasData = new h54s.SasData([{ debug: this.props.isDebug ? 1 : 0 }], 'debug');;\r\n\r\n    if (tables && Object.keys(tables).length > 0) {\r\n      const tableNames = Object.keys(tables);\r\n\r\n      for (let i = 0; i < tableNames.length; i++) {\r\n        let tableName = tableNames[i];\r\n        let data = utils.removeEmptyKeys(tables[tableName]);\r\n        sasData.addTable(data, tableName);\r\n      }\r\n    }\r\n\r\n    this.sas.call(program, sasData, (err, res) => {\r\n      this.setState(() => ({\r\n        isLoading: false,\r\n        loadingMessage: ''\r\n      }));\r\n      if (err) {\r\n        if (err.type === 'notLoggedinError') {\r\n          window.href = '/pell';\r\n        }\r\n        console.log(err);\r\n        alert('Hiba lépett fel a feldolgozás során!');\r\n      } else {\r\n        callback(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount = () =>\r\n    this.call({\r\n      program: 'getBenefits',\r\n      loadingMessage: 'Adatok letöltése'\r\n    },\r\n      (res) => this.setState(() => ({\r\n        benefits: res.benefits.sort((b1, b2) => b1.GROUP < b2.GROUP ? -1 : (b1.ELLATAS_NEV < b2.ELLATAS_NEV ? -1 : 1)),\r\n        benefitParams: res.benefitParams.sort((b1, b2) => b1.ORDER - b2.ORDER)\r\n      }))\r\n    );\r\n\r\n  jkodClick = () => {\r\n    const jkod = this.state.jkod;\r\n\r\n    if (jkod === '') return;\r\n\r\n    this.call({\r\n      program: 'getCustomer',\r\n      loadingMessage: 'Ügyfél betöltése',\r\n      tables: { jkod: [{ jkod: jkod }] }\r\n    },\r\n      (res) => {\r\n        //res is an object returned from the server\r\n        this.setState(prevState => ({\r\n          isCustomerLoaded: true,\r\n          customer: {\r\n            ALAP_ADATOK: utils.dtFromSAS2JS(res.alap_adatok, ['SZUL_DT']),\r\n            EU_ADATOK: res.eu_adatok,\r\n            EV_ELEMZES: res.ev_elemzes,\r\n            JOGVISZONY: utils.functionOnColumns(\r\n              res.jogviszony,\r\n              ['KEZDESDATUM', 'VEGEDATUM'],\r\n              (sasDateTime) => utils.fromSasDateTime(sasDateTime).toLocaleDateString('hu-HU')\r\n            ),\r\n            ALLSTAT: res.allstat\r\n          },\r\n          params: { ...prevState.params, ...{ UFAZONOSITO: jkod, JKOD: jkod } }\r\n        }));\r\n      }\r\n    );\r\n  }\r\n\r\n  calculate = () => {\r\n    const dateParams = this.state.benefitParams\r\n      .filter((param) => param.TYPE === 'D')\r\n      .map((param) => param.NAME)\r\n      .filter((name, index, names) => names.indexOf(name) === index);\r\n\r\n    const family = utils\r\n      .dtFromJS2SAS(this.state.family, ['SZUL_DT'])\r\n      .map((member) => ({\r\n        ...member, ...{ ['JKOD']: this.state.jkod }\r\n      }));\r\n\r\n    this.call({\r\n      program: 'calculateBenefits',\r\n      loadingMessage: 'Számítás',\r\n      tables: {\r\n        params: utils.dtFromJS2SAS([this.state.params], ['LEKERDEZES_DT', ...dateParams]),\r\n        alap_adatok: utils.dtFromJS2SAS(this.state.customer.ALAP_ADATOK, ['SZUL_DT']),\r\n        eu_adatok: this.state.customer.EU_ADATOK,\r\n        new_income: utils.dttmFromJS2SAS(this.state.newIncome, ['KEZDESDATUM', 'VEGEDATUM']),\r\n        family: family,\r\n        benefits: this.state.selectedBenefits.map((benefit) => ({ benefit: benefit }))\r\n      }\r\n    },\r\n      (res) => {\r\n        let brm_inputs = {};\r\n        let results = utils.dtFromSAS2JS(res.results, ['ELLATAS_START_DT', 'ELLATAS_END_DT']);\r\n\r\n        results = results.map((result) => {\r\n          const code = result['ELLATAS_CD'];\r\n          const name = this.state.benefits.filter((benefit) => benefit['ELLATAS_KOD'] === code)[0]['ELLATAS_NEV'];\r\n\r\n          return { ...result, ...{ ['ELLATAS_NM']: name } };\r\n        });\r\n\r\n        this.state.selectedBenefits.forEach((benefit) => {\r\n          if (res['brm_input_' + benefit]) {\r\n            brm_inputs[benefit] = res['brm_input_' + benefit];\r\n          }\r\n        });\r\n\r\n        window.scrollTo(0, 0);\r\n        this.setState({\r\n          selectedTab: 'RESULT',\r\n          results: results,\r\n          brm_inputs: brm_inputs\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  jkodChange = (jkod) => this.setState(() => ({ jkod: jkod }));\r\n  updateSelectedTab = (value) => this.setState({ selectedTab: value });\r\n  updateIncome = (newIncome) => this.setState(prevState => ({ newIncome: newIncome }));\r\n  updateFamily = (family) => this.setState(prevState => ({ family: family }));\r\n  setParam = (param) => this.setState(state => ({ params: { ...state.params, ...param } }));\r\n\r\n  setDebug = (bool) => {\r\n    if (bool) {\r\n      this.sas.setDebugMode();\r\n    } else {\r\n      this.sas.unsetDebugMode();\r\n    }\r\n\r\n    this.props.debugChange(bool);\r\n  }\r\n\r\n  updateCustomer = (type, index, property, data) =>\r\n    this.setState((state) => {\r\n      let customer = Object.assign({}, state.customer);\r\n      if (!customer[type][index]) {\r\n        customer[type][index] = {};\r\n      }\r\n      customer[type][index][property] = data;\r\n      return { customer: customer };\r\n    });\r\n\r\n  handleBenefitChange = (benefit) => {\r\n    this.setState(prevState => {\r\n      let newState = {};\r\n\r\n      if (prevState.selectedBenefits.indexOf(benefit) > -1) {\r\n        newState = {\r\n          selectedBenefits: prevState.selectedBenefits.filter((element) => element !== benefit)\r\n        };\r\n      } else {\r\n        newState = {\r\n          selectedBenefits: [...prevState.selectedBenefits, benefit].sort()\r\n        };\r\n      }\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Loading message={this.state.loadingMessage} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"header\">\r\n          <h2 style={{ color: '#CEC7BA', paddingBottom: 25 }}> Egységes ügyfélkép </h2>\r\n          <p style={{ fontSize: '11pt' }}>A jogosultsági történet alapján milyen elletások vehetők igénybe.</p>\r\n        </div>\r\n        <div className=\"request\">\r\n          <JkodInput jkod={this.state.jkod} onChange={this.jkodChange} onClick={this.jkodClick} />\r\n          {\r\n            this.state.isCustomerLoaded &&\r\n            <Fragment>\r\n              <CustomerData\r\n                selectedTab={this.state.selectedTab}\r\n                customer={this.state.customer}\r\n                newIncome={this.state.newIncome}\r\n                family={this.state.family}\r\n                results={this.state.results}\r\n                params={this.state.params}\r\n                updateCustomer={this.updateCustomer}\r\n                updateSelectedTab={this.updateSelectedTab}\r\n                updateIncome={this.updateIncome}\r\n                updateFamily={this.updateFamily}\r\n                setParam={this.setParam} />\r\n              <Benefits\r\n                onChange={this.handleBenefitChange}\r\n                benefits={this.state.benefits}\r\n                selectedBenefits={this.state.selectedBenefits} />\r\n            </Fragment>\r\n          }\r\n          {\r\n            this.state.selectedBenefits.length > 0 &&\r\n            <Fragment>\r\n              {this.state.selectedBenefits.map((benefit) => (\r\n                <BenefitParams\r\n                  key={benefit}\r\n                  benefit={benefit}\r\n                  benefitParams={this.state.benefitParams.filter((param) => param.ELLATAS_CD === benefit)}\r\n                  benefitDescription={this.state.benefits.filter((elem) => elem.ELLATAS_KOD === benefit)[0].ELLATAS_NEV}\r\n                  params={this.state.params}\r\n                  setParam={this.setParam} />\r\n              ))}\r\n\r\n              <div id=\"bottom_container\" style={{ position: 'relative', top: 180, width: '80%', margin: 'auto', background: '#e1e1e1', border: '1px solid #d1d1d1', padding: 0, paddingTop: 8, paddingBottom: 10, paddingLeft: 0 }} >\r\n                <table border=\"0\" cellPadding=\"8\" style={{ marginLeft: 20 }} >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"cell_text\">Vizsgált időpont:</td>\r\n                      <td className=\"cell_spacer\"></td>\r\n                      <td className=\"cell_text\">\r\n                        <DatePicker\r\n                          name='LEKERDEZES_DT'\r\n                          date={this.state.params.LEKERDEZES_DT}\r\n                          onChange={this.setParam} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"cell_text\">Teszt futtatás:</td>\r\n                      <td className=\"cell_spacer\"></td>\r\n                      <td className=\"cell_text\">\r\n                        <CheckBox\r\n                          checked={this.props.isDebug}\r\n                          onChange={this.setDebug}\r\n                          label=\"\" />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colSpan=\"2\"></td>\r\n                      <td>\r\n                        <input type=\"button\" className=\"button\" style={{ marginLeft: 0 }} value=\" Számol \" onClick={this.calculate} />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Fragment>\r\n          }\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalculateBenefits;\r\n","import React, {Component, Fragment} from 'react';\n\nclass CustomerTabs extends Component {\n  render(props) {\n    const menuItemsDesciptor = {\n      CUSTOMER: {\n        label: 'Ügyfél',\n        description: 'Az ügyfél alap- és egészségügyi adatok'\n      },\n      INCOME: {\n        label: 'Jogviszony',\n        description: 'Az ügyfél jogviszonyának adatai részletesen és éves bontásban'\n      },\n      FAMILY: {\n        label: 'Családtagok',\n        description: 'Az ügyfél családtagjai'\n      }\n    };\n\n    const defaultStyle  = {borderLeft: 0, background: 'white'};\n    const selectedStyle = {borderLeft: \"10px solid #DEB306\", background: \"rgba(222,179,6,0.2)\"};\n\n    const menuItems = Object.keys(menuItemsDesciptor).map((key) =>\n      <li key={key} className=\"li_tab\" onClick={() => this.props.onClick(key)}>\n        <div className=\"fold\">\n          <h3 className=\"h3\" style={this.props.selected === key ? selectedStyle : defaultStyle}>{menuItemsDesciptor[key].label}</h3>\n          <p>{menuItemsDesciptor[key].description}</p>\n        </div>\n      </li>\n    );\n\n    return (\n      <Fragment>\n        {menuItems}\n      </Fragment>\n    );\n  }\n}\n\nexport default CustomerTabs;\n","import React, {Component} from 'react';\r\nimport DatePicker from '../FormElements/DatePicker';\r\nimport Input from '../FormElements/Input';\r\n\r\nclass CustomerBase extends Component {\r\n  changeData = (type, property) => ( (event) => this.props.updateCustomer(type, 0, property, event.target.value) );\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"t1_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'center'}} >\r\n        <div id=\"data1\" style={{margin:'0px auto', width:'100%', height:'100%', textAlign:'center', background:'white', marginTop:2}}>\r\n          <table style={{margin:'0 auto', width:'100%', height:'100%'}}>\r\n            <tbody>\r\n              <tr>\r\n                <td valign=\"middle\" align=\"middle\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"cell_property\">Születési idő:</td>\r\n                        <td className=\"cell_value\">\r\n                          <DatePicker\r\n                            name=\"SZUL_DT\"\r\n                            className=\"cell_input\"\r\n                            date={this.props.base.SZUL_DT ? this.props.base.SZUL_DT : ''}\r\n                            onChange={(dateObject) => this.props.updateCustomer('ALAP_ADATOK', 0, 'SZUL_DT', dateObject.SZUL_DT)} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Egészségügyi állapot:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"EU_ALLAPOT\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu.EU_ALLAPOT != null ? this.props.eu.EU_ALLAPOT : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'EU_ALLAPOT', value)} />\r\n                          &nbsp;%\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Kereső tevékenységet végez:</td>\r\n                        <td className=\"cell_value\">\r\n                          <select id=\"KER_TEV_FLG\" name=\"KER_TEV_FLG\" className=\"combobox\" size=\"1\" value={this.props.params.KER_TEV_FLG ? this.props.params.KER_TEV_FLG : ''} onChange={(event) => this.props.setParam({KER_TEV_FLG: event.target.value})} >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"1\">Igen</option>\r\n                            <option value=\"0\">Nem</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"cell_property\">Nem:</td>\r\n                        <td className=\"cell_value\">\r\n                          <input type=\"text\" name=\"NEM\" className=\"cell_input\" value={this.props.base.NEM ? this.props.base.NEM : ''} onChange={this.changeData('ALAP_ADATOK', 'NEM')} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\"></td>\r\n                        <td className=\"cell_property\">Rehabilitálható flag:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"REHABILITALHATO_FL\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu['REHABILITALHATO_FL'] != null ? this.props.eu['REHABILITALHATO_FL'] : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'REHABILITALHATO_FL', value)} />\r\n                        </td>\r\n                        <td className=\"cell_spacer\">\r\n                        </td>\r\n                        <td className=\"cell_property\">Rendszeres pénzellátásban részesül:</td>\r\n                        <td className=\"cell_value\">\r\n                          <select id=\"RENDSZ_PENZELL_FLG\" name=\"RENDSZ_PENZELL_FLG\" className=\"combobox\" size=\"1\"  value={this.props.params.RENDSZ_PENZELL_FLG ? this.props.params.RENDSZ_PENZELL_FLG : ''} onChange={(event) => this.props.setParam({RENDSZ_PENZELL_FLG: event.target.value})} >\r\n                            <option></option>\r\n                            <option value=\"1\">Igen</option>\r\n                            <option value=\"0\">Nem</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colSpan=\"3\"></td>\r\n                        <td className=\"cell_property\">Önellátásra képes flag:</td>\r\n                        <td className=\"cell_value\">\r\n                          <Input\r\n                            type=\"N\"\r\n                            name=\"ONELLATAS_FL\"\r\n                            className=\"cell_input\"\r\n                            value={this.props.eu['ONELLATAS_FL'] != null ? this.props.eu['ONELLATAS_FL'] : ''}\r\n                            onChange={(value) => this.props.updateCustomer('EU_ADATOK', 0, 'ONELLATAS_FL', value)} />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colSpan=\"3\"></td>\r\n                        <td className=\"cell_property\">Komplex minősítés:</td>\r\n                        <td className=\"cell_value\">\r\n                          <input type=\"text\" name=\"KMPX_MIN\" className=\"cell_input\" value={this.props.eu.KMPX_MIN ? this.props.eu.KMPX_MIN : ''} onChange={this.changeData('EU_ADATOK', 'KMPX_MIN')} />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerBase;\r\n","import React, {Component} from 'react';\r\nimport RadioButton from '../FormElements/RadioButton';\r\nimport DatePicker from '../FormElements/DatePicker';\r\nimport Select from '../FormElements/Select';\r\nimport Table from '../Table';\r\n\r\nclass CustomerIncome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      aggregation_level: 'yearly'\r\n    }\r\n\r\n    this.headers ={\r\n      yearly: [\r\n        {name: 'EV',                        align: 'R', label: 'Év'},\r\n        {name: 'ALKMINKOD',                 align: 'L', label: 'ALKMINKOD'},\r\n        {name: 'IRANYITOSZAM',              align: 'C', label: 'IRANYITOSZAM'},\r\n        {name: 'SZOLG_NOK40_NAP',           align: 'R', label: 'SZOLG_NOK40_NAP'},\r\n        {name: 'SZOLG_15_RESZNY',           align: 'R', label: 'SZOLG_15_RESZNY'},\r\n        {name: 'SZOLG_20_TELJ',             align: 'R', label: 'SZOLG_20_TELJ'},\r\n        {name: 'JARULEKALAP',               align: 'R', label: 'JARULEKALAP'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'SZOLG_GOND_DIJ_NAP',        align: 'R', label: 'SZOLG_GOND_DIJ_NAP'},\r\n        {name: 'SZOLG_GOND_SEGELY_NAP',     align: 'R', label: 'SZOLG_GOND_SEGELY_NAP'},\r\n        {name: 'SZOLG_NEVEL_TAM_NAP',       align: 'R', label: 'SZOLG_NEVEL_TAM_NAP'},\r\n        {name: 'SZOLG_APOLASI_DIJ_NAP',     align: 'R', label: 'SZOLG_APOLASI_DIJ_NAP'}\r\n      ],\r\n\r\n      detailed:[\r\n        {name: 'TARGYEV',                   align: 'R', label: 'TARGYEV'},\r\n        {name: 'FOGLALKOZTATO_AZON',        align: 'L', label: 'FOGLALKOZTATO_AZON'},\r\n        {name: 'ALKMIN',                    align: 'L', label: 'ALKMIN'},\r\n        {name: 'ALABONTASKOD',              align: 'L', label: 'ALABONTASKOD'},\r\n        {name: 'ALABONTASERTEK',            align: 'R', label: 'ALABONTASERTEK'},\r\n        {name: 'KEZDESDATUM',               align: 'C', label: 'KEZDESDATUM'},\r\n        {name: 'VEGEDATUM',                 align: 'C', label: 'VEGEDATUM'},\r\n        {name: 'OSZTONAP',                  align: 'R', label: 'OSZTONAP'},\r\n        {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'R', label: 'NYUGDIJBIZTOSITASIJARULEK'},\r\n        {name: 'FOJOGVISZONYNAP',           align: 'R', label: 'FOJOGVISZONYNAP'},\r\n        {name: 'MINOSEG_JEL',               align: 'L', label: 'MINOSEG_JEL'},\r\n        {name: 'MUNKAIDO',                  align: 'L', label: 'MUNKAIDO'},\r\n        {name: 'FORRAS_TABLA',              align: 'L', label: 'FORRAS_TABLA'}\r\n      ]\r\n    };\r\n\r\n    this.radioChange = this.radioChange.bind(this);\r\n  }\r\n\r\n  radioChange(value) {\r\n    this.setState({aggregation_level: value});\r\n  }\r\n\r\n  columnToInput(column, index) {\r\n    let input = null;\r\n\r\n    switch (column.name) {\r\n      case 'SELECTED':\r\n        input = (\r\n          <RadioButton\r\n            name=\"selector\"\r\n            value={index}\r\n            selectedValue={this.state.selectedRow}\r\n            label=\"\"\r\n            onChange={(value) => this.setState({selectedRow: parseInt(value)})} />\r\n        );\r\n        break;\r\n      case 'KEZDESDATUM':\r\n      case 'VEGEDATUM':\r\n        input = (\r\n          <DatePicker\r\n            name={column.name}\r\n            date={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(dateObject) => this.updateIncome(index, column.name, dateObject[column.name])} />\r\n        );\r\n        break;\r\n      case 'FORRAS_TABLA':\r\n        input = (\r\n          <Select \r\n            name='FORRAS_TABLA'\r\n            value={this.props.new[index][column.name]}\r\n            onChange={(value) => this.updateIncome(index, column.name, value)}\r\n            options={{\r\n              'VALODI': 'Valódi',\r\n              'PSZEUDO': 'Pszeudó'}}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        input = (\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.new[index][column.name] ? this.props.new[index][column.name] : ''}\r\n            onChange={(event) => this.updateIncome(index, column.name, parseInt(event.target.value))} />\r\n        );\r\n        break;\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  prepareData(aggregation_level) {\r\n    return this.props[this.state.aggregation_level];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"t2_content\" style={{width:'100%', height:'100%', top:0, position:'absolute', textAlign:'left'}}>\r\n        <div style={{padding:0, fontSize:'15pt', background:'#ece3c0', marginTop:2, width:\"100%\"}}>\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n            <tbody>\r\n              <tr style={{height:45}}>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"yearly\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Éves összesített adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td className=\"cell_spacer\">\r\n                </td>\r\n                <td style={{fontSize:'11pt', whiteSpace: 'nowrap'}}>\r\n                  <RadioButton\r\n                    name=\"aggregation_level\"\r\n                    value=\"detailed\"\r\n                    selectedValue={this.state.aggregation_level}\r\n                    label=\"Részletes adatok\"\r\n                    onChange={this.radioChange} />\r\n                </td>\r\n                <td style={{width:'100%'}} align='right'>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"data2_container\" style={{margin:'0px auto', width:'100%', bottom:0, top:40, position:'absolute',  textAlign:'left', overflow:'auto'}} >\r\n          <div style={{height:'100%', padding:0}} >\r\n            <div id=\"data2\" style={{margin:'0px auto', height:'100%', position:'relative', width:'100%', textAlign:'center', overflow:'auto', display:'block'}} >\r\n              <Table header={this.headers[this.state.aggregation_level]} data={this.prepareData(this.state.aggregation_level)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerIncome;\r\n","import React, { Component } from 'react';\r\nimport RadioButton from '../FormElements/RadioButton';\r\nimport DatePicker from '../FormElements/DatePicker';\r\nimport Table from '../Table';\r\n\r\nclass CustomerFamily extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedRow: 0\r\n    }\r\n\r\n    this.headers = [\r\n      {name: 'SELECTED',     align: 'C', label: ''},\r\n      {name: 'FAMILY_JKOD',  align: 'C', label: 'Azonosító'},\r\n      {name: 'SZUL_DT',      align: 'C', label: 'Születési dátum'},\r\n      {name: 'TYPE',         align: 'C', label: 'Kapcsolat jellege'}\r\n    ];\r\n\r\n    this.addRow = this.addRow.bind(this);\r\n    this.removeRow = this.removeRow.bind(this);\r\n  }\r\n\r\n  updateFamily(index, property, value) {\r\n    const newFamily = this.props.family.slice();\r\n    newFamily[index][property] = value;\r\n    this.props.updateFamily(newFamily);\r\n  }\r\n\r\n  addRow() {\r\n    let newRow = {};\r\n    this.headers.forEach((column) => {\r\n      if (column.name !== 'SELECTED') {\r\n        newRow[column.name] = null;\r\n      }\r\n    });\r\n\r\n    this.props.updateFamily([\r\n      newRow,\r\n      ...this.props.family\r\n    ]);\r\n  }\r\n\r\n  removeRow() {\r\n    const newFamily = this.props.family.slice();\r\n    const index = this.state.selectedRow;\r\n\r\n    newFamily.splice(index, 1);\r\n\r\n    this.props.updateFamily(newFamily);\r\n  }\r\n\r\n  columnToInput(column, index) {\r\n    let input = null;\r\n\r\n    switch (column.name) {\r\n      case 'SELECTED':\r\n        input = (\r\n          <RadioButton\r\n            name=\"selector\"\r\n            value={index}\r\n            selectedValue={this.state.selectedRow}\r\n            label=\"\"\r\n            onChange={(value) => this.setState({ selectedRow: parseInt(value) })} />\r\n        );\r\n        break;\r\n      case 'FAMILY_JKOD':\r\n        input = (\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} />\r\n        );\r\n        break;\r\n      case 'SZUL_DT':\r\n        input = (\r\n          <DatePicker\r\n            name={column.name}\r\n            date={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(dateObject) => this.updateFamily(index, column.name, dateObject[column.name])} />\r\n        );\r\n        break;\r\n      case 'TYPE':\r\n        input = (\r\n          <select\r\n            name={column.name}\r\n            className=\"combobox\"\r\n            style={{ width: 168, background: 'white', border: '1px black solid' }}\r\n            size=\"1\"\r\n            value={this.props.family[index][column.name] ? this.props.family[index][column.name] : ''}\r\n            onChange={(event) => this.updateFamily(index, column.name, parseInt(event.target.value))} >\r\n            <option></option>\r\n            <option value=\"1\">Szülő</option>\r\n            <option value=\"2\">Házastárs</option>\r\n            <option value=\"3\">Gyermek</option>\r\n          </select>\r\n        );\r\n        break;\r\n      default:\r\n        input = null;\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  prepareData() {\r\n    return this.props.family.map((row, index) => {\r\n      let newRow = {};\r\n      this.headers.forEach((column) => {\r\n        newRow[column.name] = this.columnToInput(column, index);\r\n      });\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div id=\"t2_content\" style={{ width: '100%', height: '100%', top: 0, position: 'absolute', textAlign: 'left' }}>\r\n        <div style={{ padding: 0, fontSize: '15pt', background: '#ece3c0', marginTop: 2, width: \"100%\" }}>\r\n          <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n            <tbody>\r\n              <tr style={{ height: 45 }}>\r\n                <td style={{ width: '100%' }} align='right'>\r\n                  <div id=\"btns\" style={{ paddingRight: 10, paddingBottom: 5 }}>\r\n                    <input type=\"button\" className=\"button\" value=\" Új családtag \" id=\"newRowBtn\" onClick={this.addRow} />\r\n                    <input type=\"button\" className=\"button_disabled\" value=\" Családtag törlése\" id=\"delRowBtn\" onClick={this.removeRow} />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"data2_container\" style={{ margin: '0px auto', width: '100%', bottom: 0, top: 40, position: 'absolute', textAlign: 'left', overflow: 'auto' }} >\r\n          <div style={{ height: '100%', padding: 0 }} >\r\n            <div id=\"data2\" style={{ margin: '0px auto', height: '100%', position: 'relative', width: '100%', textAlign: 'center', overflow: 'auto', display: 'block' }} >\r\n              <Table header={this.headers} data={this.prepareData()} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerFamily;\r\n","import React, { Component } from 'react';\r\nimport CustomerBase from './CustomerBase';\r\nimport CustomerIncome from './CustomerIncome';\r\nimport CustomerFamily from './CustomerFamily';\r\n\r\nclass CustomerContent extends Component {\r\n  render() {\r\n    let content = null;\r\n\r\n    switch (this.props.selected) {\r\n      case 'CUSTOMER':\r\n        const alap = this.props.data.ALAP_ADATOK[0] ? this.props.data.ALAP_ADATOK[0] : {};\r\n        const eu = this.props.data.EU_ADATOK[0] ? this.props.data.EU_ADATOK[0] : {};\r\n        content = (\r\n          <CustomerBase\r\n            base={alap}\r\n            eu={eu}\r\n            updateCustomer={this.props.updateCustomer}\r\n            setParam={this.props.setParam}\r\n            params={this.props.params} />\r\n        );\r\n        break;\r\n      case 'INCOME':\r\n        content = (\r\n          <CustomerIncome\r\n            yearly={this.props.data.EV_ELEMZES}\r\n            detailed={this.props.data.JOGVISZONY} />\r\n        );\r\n        break;\r\n      case 'FAMILY':\r\n        content = (\r\n          <CustomerFamily\r\n            family={this.props.family}\r\n            updateFamily={this.props.updateFamily} />\r\n        );\r\n        break;\r\n      default:\r\n        content = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"more\" style={{ height: 250, verticalAlign: 'top', textTransform: 'none' }}>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerContent;\r\n","import React, {Component} from 'react';\nimport CustomerTabs from './CustomerTabs';\nimport CustomerContent from './CustomerContent';\n\nclass CustomerData extends Component {\n  render(props) {\n    return (\n      <ul className=\"tabs\" id=\"tab_container\">\n        <CustomerTabs\n          selected={this.props.selectedTab}\n          onClick={this.props.updateSelectedTab} />\n        <CustomerContent\n          selected={this.props.selectedTab}\n          data={this.props.customer}\n          family={this.props.family}\n          updateFamily={this.props.updateFamily}\n          updateCustomer={this.props.updateCustomer}\n          setParam={this.props.setParam}\n          params={this.props.params} />\n      </ul>\n    );\n  }\n}\n\nexport default CustomerData;\n","import React, { Component, Fragment } from 'react';\nimport { SAS } from '../../js/utils';\nimport Select from '../FormElements/Select';\nimport Input from '../FormElements/Input';\nimport DatePicker from '../FormElements/DatePicker';\nimport BenefitParams from '../BenefitParams';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: [],\n      eventParams: [],\n      eventBenefits: [],\n      selectedEvent: 'JOGSZ',\n      benefitList: []\n    };\n\n    this.sas = new SAS();\n  }\n\n  getBenefits = () =>\n    this.sas.call({\n      program: 'getBenefits',\n      isDebug: this.props.isDebug,\n      preprocess: () => this.setState(() => ({\n        isLoading: true,\n        loadingMessage: 'Betöltés'\n      })),\n      success: (res) => {\n        this.setState(() => ({\n          benefits: res.benefits,\n          benefitParams: res.benefitParams\n        }));\n      },\n      postprocess: () => {\n        this.setState(() => ({\n          isLoading: false\n        }));\n      }\n    });\n\n  componentDidMount = () =>\n    this.sas.call({\n      program: 'getEvents',\n      isDebug: this.props.isDebug,\n      preprocess: () => this.setState(() => ({\n        isLoading: true,\n        loadingMessage: 'Betöltés'\n      })),\n      success: (res) => {\n        this.setState(() => ({\n          events: res.events,\n          eventParams: res.eventParams,\n          eventBenefits: res.eventBenefits\n        }));\n        this.getBenefits();\n      },\n      postprocess: () => {\n        this.setState(() => ({\n          isLoading: false\n        }));\n      }\n    });\n\n  addEvent = () => {\n    if (!this.state.selectedEvent) return;\n\n    const benefits = this.state.eventBenefits\n      .filter(event => event.EVENT_CD === this.state.selectedEvent)\n      .map(event => event.BENEFIT_CD);\n    \n    const benefit_params_descriptor = this.state.benefitParams\n      .filter(param => benefits.indexOf(param.ELLATAS_CD) > -1)\n      .filter(param => param.SCEN_FLG === 1)\n      .sort((p1, p2) => p1.ORDER < p2.ORDER ? -1 : 1);\n\n    const eventList = [\n      ...this.props.eventList,\n      {\n        event_cd: this.state.selectedEvent,\n        event_desc: this.state.events.filter((e) => e.EVENT_CD === this.state.selectedEvent)[0].EVENT_DESC,\n        event_params: {},\n        event_params_descriptor: this.state.eventParams\n          .filter((param) => (param.EVENT_CD === this.state.selectedEvent)),\n        benefits: this.state.benefits\n          .filter(benefit => benefits.indexOf(benefit.ELLATAS_KOD) > -1)\n          .sort((b1, b2) => b1.ELLATAS_KOD < b2.ELLATAS_KOD ? -1 : 1),\n        benefit_params: benefit_params_descriptor\n          .reduce((params, param) => {\n            if (param.DEFAULT) params[param.NAME] = param.DEFAULT;\n            return params;\n          }, {}),\n        benefit_params_descriptor: benefit_params_descriptor,\n        show_benefit_params: true\n      }\n    ];\n\n    const benefitList = eventList\n      .map(event => this.state.eventBenefits.filter(eb => eb.EVENT_CD === event.event_cd).map(eb => eb.BENEFIT_CD))\n      .flat()\n      .filter((elem, index, array) => array.indexOf(elem) === index);\n\n    this.setState({ benefitList: benefitList });\n    this.props.eventListUpdate({ eventList: eventList });\n  }\n\n  removeEvent = (index) => {\n    const eventList = this.props.eventList.slice();\n    eventList.splice(index, 1);\n\n    const benefitList = eventList\n      .map(event => this.state.eventBenefits.filter(eb => eb.EVENT_CD === event.event_cd).map(eb => eb.BENEFIT_CD))\n      .flat()\n      .filter((elem, index, array) => array.indexOf(elem) === index);\n\n    this.setState({ benefitList: benefitList });\n    this.props.eventListUpdate({ eventList: eventList });\n  }\n\n  toggleBenefitShow = (index) => {\n    const eventList = this.props.eventList.slice();\n    eventList[index].show_benefit_params = !eventList[index].show_benefit_params;\n\n    this.props.eventListUpdate({ eventList: eventList });\n  }\n\n  updateEventList = (index, property, name, value) => {\n    let eventList = this.props.eventList.slice();\n    eventList[index][property][name] = value;\n    this.props.eventListUpdate({ eventList: eventList });\n  }\n\n  setBenefitParam = (index, property) => \n    obj => {\n      const key = Object.getOwnPropertyNames(obj)[0];\n      this.updateEventList(index, property, key, obj[key]);\n    }\n\n  renderParam = (event, index) => {\n    return (param) => {\n      if (param.NAME.indexOf('_FLG') > -1 && param.TYPE !== 'S') {\n        param.TYPE = 'FL';\n      }\n\n      let input = null;\n\n      switch (param.TYPE) {\n        case 'N':\n          input = (\n            <Input\n              type=\"N\"\n              name={param.NAME}\n              className=\"cell_input\"\n              value={event.event_params[param.NAME] != null ? event.event_params[param.NAME] : ''}\n              onChange={(value) => this.updateEventList(index, 'event_params', param.NAME, value)} />\n          );\n          break;\n        case 'F':\n          input = (\n            <Input\n              type=\"F\"\n              name={param.NAME}\n              className=\"cell_input\"\n              value={event.event_params[param.NAME] != null ? event.event_params[param.NAME] : ''}\n              onChange={(value) => this.updateEventList(index, 'event_params', param.NAME, value)} />\n          );\n          break;\n        case 'S':\n          const pairs = param.OPTIONS.split(';');\n          input = (\n            <select\n              name={param.NAME}\n              className=\"combobox\"\n              size=\"1\"\n              value={event.event_params[param.NAME] ? event.event_params[param.NAME] : ''}\n              onChange={(event) => this.updateEventList(index, 'event_params', param.NAME, event.target.value)} >\n              <option></option>\n              {pairs.map((pair, index) => (\n                <option key={index} value={pair.split(':')[0]}> {pair.split(':')[1]} </option>\n              ))}\n            </select>\n          );\n          if (pairs.length > 1) break;\n        case 'C':\n          input = (\n            <Input\n              type=\"C\"\n              name={param.NAME}\n              className=\"cell_input\"\n              value={event.event_params[param.NAME] ? event.event_params[param.NAME] : ''}\n              onChange={(value) => this.updateEventList(index, 'event_params', param.NAME, value)} />\n          );\n          break;\n        case 'D':\n          input = (\n            <DatePicker\n              name={param.NAME}\n              className=\"cell_input\"\n              date={event.event_params[param.NAME] ? event.event_params[param.NAME] : ''}\n              onChange={(value) => this.updateEventList(index, 'event_params', param.NAME, value[param.NAME])} />\n          );\n          break;\n        case 'FL':\n          input = (\n            <select\n              name={param.NAME}\n              className=\"combobox\"\n              size=\"1\"\n              value={event.event_params[param.NAME] ? event.event_params[param.NAME] : ''}\n              onChange={(event) => this.updateEventList(index, 'event_params', param.NAME, event.target.value)} >\n              <option></option>\n              <option value=\"1\">Igen</option>\n              <option value=\"0\">Nem</option>\n            </select>\n          );\n          break;\n        default:\n          input = null;\n      }\n\n      return (\n        <tr key={param.NAME}>\n          <td className=\"cell_property_fix\">{param.LABEL}:</td>\n          <td className=\"cell_value\">\n            {input}\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"benefit_container\" style={{ position: 'relative', top: 150, width: '80%', margin: 'auto', background: '#e1e1e1', border: '1px solid #d1d1d1', padding: 0, paddingBottom: 0 }} >\n          <div>\n            <div style={{ paddingLeft: 20, paddingBottom: 8, fontSize: 13, textTransform: 'uppercase', paddingTop: 10 }} >\n              Életsemények\n          </div>\n            <div style={{ background: '#fff', padding: 5, borderTop: '1px solid #d1d1d1', margin: '0px auto', horizontalAlign: 'center' }} >\n              <table width=\"100%\" border=\"0\" cellPadding=\"8\" >\n                <tbody>\n                  <tr>\n                    <td>\n                      <Select\n                        name=\"event\"\n                        className=\"combobox\"\n                        value={this.state.selectedEvent}\n                        onChange={(value) => this.setState(() => ({ selectedEvent: value }))}\n                        options={this.state.events.reduce((prev, event) => ({\n                          ...prev, ...{ [event.EVENT_CD]: event.EVENT_DESC }\n                        }), {})} />\n                      <input type=\"button\" className=\"button\" style={{ marginLeft: 10 }} value=\" Hozzáadás \" onClick={this.addEvent} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        {\n          this.props.eventList.map((event, index) => (\n            <Fragment key={index} >\n              <div id=\"benefit_container\" style={{ position: 'relative', top: 180 + index * 30, width: '80%', margin: 'auto', background: '#deb306', border: '1px solid #d1d1d1', padding: 0, paddingBottom: 0 }} >\n                <div key={event.event_cd + index}>\n                  <div style={{ paddingLeft: 20, paddingBottom: 8, fontSize: 14, textTransform: 'uppercase', paddingTop: 10 }} >\n                    {index + 1}. Életesemény: {event.event_desc}\n                    <input type=\"button\" className=\"button\" style={{ marginLeft: 10 }} value=\" Törlés \" onClick={() => this.removeEvent(index)} />\n                    {\n                      event.benefits.length > 0 &&\n                      <input type=\"button\" className=\"button\" style={{ marginLeft: 10 }} value={event.show_benefit_params ? ' Ellátás paramétereinek elrejtése ' : ' Ellátás paramétereinek mutatása '} onClick={() => this.toggleBenefitShow(index)} />\n                    }\n                  </div>\n                  <div style={{ background: '#fff', padding: 5, borderTop: '1px solid #d1d1d1', margin: '0px auto', horizontalAlign: 'center' }} >\n                    <table width=\"100%\" border=\"0\" cellPadding=\"8\" >\n                      <tbody>\n                        <tr>\n                          <td align=\"center\">\n                            <table border=\"0\" cellPadding=\"8\" >\n                              <tbody>\n                                {event.event_params_descriptor.map(this.renderParam(event, index))}\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              {\n                event.show_benefit_params &&\n                event.benefits.map((benefit) => (\n                  event.benefit_params_descriptor.filter((param) => param.ELLATAS_CD === benefit.ELLATAS_KOD).length > 0 &&\n                  <BenefitParams\n                    key={benefit.ELLATAS_KOD}\n                    top={180 + index * 30}\n                    benefit={benefit.ELLATAS_NEV}\n                    benefitParams={event.benefit_params_descriptor.filter((param) => param.ELLATAS_CD === benefit.ELLATAS_KOD)}\n                    benefitDescription={benefit.ELLATAS_NEV}\n                    params={event.benefit_params}\n                    setParam={this.setBenefitParam(index, 'benefit_params')} />\n                ))\n              }\n            </Fragment>\n          ))\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default Events;\n","import React, { Component, Fragment } from 'react';\r\nimport utils, { SAS } from '../../js/utils';\r\n\r\nimport Loading from '../Loading';\r\nimport JkodInput from '../JkodInput';\r\nimport CustomerData from './CustomerData';\r\nimport Events from './Events';\r\nimport DatePicker from '../FormElements/DatePicker';\r\nimport CheckBox from '../FormElements/CheckBox';\r\nimport Table from '../Table';\r\n\r\nclass Scenario extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      loadingMessage: '',\r\n      isCustomerLoaded: false,\r\n      jkod: '',\r\n      selectedTab: 'CUSTOMER',\r\n      family: [],\r\n      eventList: []\r\n    };\r\n\r\n    this.sas = new SAS();\r\n  }\r\n\r\n  jkodClick = () => {\r\n    const jkod = this.state.jkod;\r\n    if (jkod === '') return;\r\n\r\n    this.sas.call({\r\n      program: 'getCustomer',\r\n      isDebug: this.props.isDebug,\r\n      tables: {\r\n        jkod: [{ jkod: jkod }]\r\n      },\r\n      preprocess: () => this.setState(() => ({\r\n        isLoading: true,\r\n        loadingMessage: 'Ügyfél betöltése'\r\n      })),\r\n      success: (res) => this.setState(prevState => ({\r\n        isCustomerLoaded: true,\r\n        customer: {\r\n          ALAP_ADATOK: utils.dtFromSAS2JS(res.alap_adatok, ['SZUL_DT']),\r\n          EU_ADATOK: res.eu_adatok,\r\n          EV_ELEMZES: res.ev_elemzes,\r\n          JOGVISZONY: utils.functionOnColumns(\r\n            res.jogviszony,\r\n            ['KEZDESDATUM', 'VEGEDATUM'],\r\n            (sasDateTime) => utils.fromSasDateTime(sasDateTime).toLocaleDateString('hu-HU')\r\n          )\r\n        },\r\n        params: { ...prevState.params, ...{ UFAZONOSITO: jkod, JKOD: jkod } }\r\n      })),\r\n      postprocess: () => this.setState(() => ({\r\n        isLoading: false\r\n      }))\r\n    });\r\n  }\r\n\r\n  jkodChange = (jkod) => this.setState(() => ({ jkod: jkod }));\r\n  updateSelectedTab = (value) => this.setState({ selectedTab: value });\r\n  updateFamily = (family) => this.setState(() => ({ family: family }));\r\n  setParam = (param) => this.setState(state => ({ params: { ...state.params, ...param } }));\r\n\r\n  updateCustomer = (type, index, property, data) =>\r\n    this.setState((state) => {\r\n      let customer = Object.assign({}, state.customer);\r\n      if (!customer[type][index]) {\r\n        customer[type][index] = {};\r\n      }\r\n      customer[type][index][property] = data;\r\n      return { customer: customer };\r\n    });\r\n  \r\n  calculate = () => {\r\n    const tables = {\r\n      events: this.state.eventList.map((event, index) => ({\r\n        order: index+1,\r\n        event: event.event_cd\r\n      })),\r\n      family: this.state.family.map((member) => ({\r\n        JKOD: this.state.jkod, ...member\r\n      }))\r\n    };\r\n\r\n    this.state.eventList.forEach((element, index) => {\r\n      tables['event_'+(index+1)+'_params'] = [{...element.event_params, ...element.benefit_params, ...this.state.params}];\r\n    });\r\n\r\n    this.sas.call({\r\n      program: 'calculateScenario',\r\n      isDebug: this.props.isDebug,\r\n      tables: tables,\r\n      preprocess: () => this.setState(() => ({\r\n        isLoading: true,\r\n        loadingMessage: 'Szcenárió futás'\r\n      })),\r\n      success: (res) => this.setState({result: res}),\r\n      postprocess: () => this.setState(() => ({\r\n        isLoading: false\r\n      }))\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Loading message={this.state.loadingMessage} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"header\">\r\n          <h2 style={{ color: '#CEC7BA', paddingBottom: 25 }}> Szcenárióelemzés </h2>\r\n          <p style={{ fontSize: '11pt' }}>Életesemények hatása a jogszerzésre.</p>\r\n        </div>\r\n        <div className=\"request\">\r\n          <JkodInput jkod={this.state.jkod} onChange={this.jkodChange} onClick={this.jkodClick} />\r\n          {\r\n            this.state.isCustomerLoaded &&\r\n            <Fragment>\r\n              <CustomerData\r\n                selectedTab={this.state.selectedTab}\r\n                customer={this.state.customer}\r\n                family={this.state.family}\r\n                params={this.state.params}\r\n                updateCustomer={this.updateCustomer}\r\n                updateSelectedTab={this.updateSelectedTab}\r\n                updateFamily={this.updateFamily}\r\n                setParam={this.setParam} />\r\n              <Events\r\n                eventList={this.state.eventList}\r\n                eventListUpdate={({ eventList }) => this.setState({ eventList: eventList })} />\r\n            </Fragment>\r\n          }\r\n          {\r\n            this.state.eventList.length > 0 &&\r\n            <div id=\"bottom_container\" style={{ position: 'relative', top: 180 + this.state.eventList.length * 30, width: '80%', margin: 'auto', background: '#e1e1e1', border: '1px solid #d1d1d1', padding: 0, paddingTop: 8, paddingBottom: 10, paddingLeft: 0 }} >\r\n              <table border=\"0\" cellPadding=\"8\" style={{ marginLeft: 20 }} >\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"cell_text\">Vizsgált időpont:</td>\r\n                    <td className=\"cell_spacer\"></td>\r\n                    <td className=\"cell_text\">\r\n                      <DatePicker\r\n                        name='LEKERDEZES_DT'\r\n                        date={this.state.params.LEKERDEZES_DT}\r\n                        onChange={this.setParam} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"cell_text\">Teszt futtatás:</td>\r\n                    <td className=\"cell_spacer\"></td>\r\n                    <td className=\"cell_text\">\r\n                      <CheckBox\r\n                        checked={this.props.isDebug}\r\n                        onChange={this.setDebug}\r\n                        label=\"\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\"></td>\r\n                    <td>\r\n                      <input type=\"button\" className=\"button\" style={{ marginLeft: 0 }} value=\" Számol \" onClick={this.calculate} />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          }\r\n          {\r\n            this.state.result &&\r\n            <div>\r\n              BRM_OUTPUT\r\n              <Table\r\n                header={[\r\n                  { name: 'ELLATAS_CD',       align: 'C', label: 'Ellátás kódja' },\r\n                  { name: 'ELLATAS_NM',       align: 'C', label: 'Ellátás neve' },\r\n                  { name: 'ELLATAS_START_DT', align: 'C', label: 'Ellátás Kezdete' },\r\n                  { name: 'ELLATAS_END_DT',   align: 'C', label: 'Ellátás Vége' },\r\n                  { name: 'ELLATAS_DAYS_NUM', align: 'C', label: 'Ellátás hossza' },\r\n                  { name: 'ELLATAS_AMOUNT',   align: 'C', label: 'Ellátás összege' },\r\n                  { name: 'ELLATAS_DESC',     align: 'C', label: 'Megjegyzés' }\r\n                ]}\r\n                data={this.state.result.brm_output}\r\n              />\r\n              JOGVISZONY\r\n              <Table\r\n                header={[\r\n                    {name: 'TARGYEV',                   align: 'R', label: 'Tárgyév'},\r\n                    {name: 'ALKMIN',                    align: 'L', label: 'ALKMIN kód'},\r\n                    {name: 'KEZDESDATUM',               align: 'C', label: 'Jogviszony kezdete'},\r\n                    {name: 'VEGEDATUM',                 align: 'C', label: 'Jogviszony vége'},\r\n                    {name: 'OSZTONAP',                  align: 'R', label: 'Osztónap'},\r\n                    {name: 'NYUGDIJBIZTOSITASIJARULEK', align: 'R', label: 'Összeg'},\r\n                    {name: 'FORRAS_TABLA',              align: 'L', label: 'Pszeudó / Valódi'},\r\n                    {name: 'SOURCE_METHOD',             align: 'L', label: 'Jogviszony forrása'}\r\n                  ]}\r\n                data={this.state.result.jogviszony}\r\n              />\r\n            </div>\r\n          }\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scenario;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst SettingsTab = ({ tabs, selectedTab, selectTab }) => {\r\n  const defaultStyle = { borderLeft: 0, background: 'white' };\r\n  const selectedStyle = { borderLeft: \"10px solid #DEB306\", background: \"rgba(222,179,6,0.2)\" };\r\n\r\n  const menuItems = Object.keys(tabs).map((key) =>\r\n    <li key={key} className=\"li_tab\" onClick={() => selectTab(key)} style={{ width: '' + 100 / Object.keys(tabs).length + '%' }}>\r\n      <div className=\"fold\">\r\n        <h3 className=\"h3\" style={selectedTab === key ? selectedStyle : defaultStyle}>{tabs[key].label}</h3>\r\n        <p>{tabs[key].description}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {menuItems}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SettingsTab;","import React, { Component } from 'react';\r\nimport { SAS } from '../js/utils';\r\nimport Loading from './Loading';\r\nimport Table from './Table';\r\nimport Select from './FormElements/Select';\r\nimport Input from './FormElements/Input';\r\n\r\nclass SettingsContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      loadingMessage: '',\r\n      'BENEFITS': [],\r\n      'PARAMS': []\r\n    }\r\n\r\n    this.sas = new SAS();\r\n  }\r\n\r\n  componentDidMount = () => this.reload()\r\n\r\n  reload = () => {\r\n    this.sas.call({\r\n      program: 'getBenefits',\r\n      preprocess: () => this.setState(() => ({\r\n        isLoading: true,\r\n        loadingMessage: 'Betöltés'\r\n      })),\r\n      success: (res) => this.setState({\r\n        'BENEFITS': res.benefits.sort((b1, b2) => b1['ELLATAS_KOD'] < b2['ELLATAS_KOD'] ? -1 : 1),\r\n        'PARAMS': res.benefitParams.sort((b1, b2) => b1['ORDER'] < b2['ORDER'] ? -1 : b1['ELLATAS_KOD'] < b2['ELLATAS_KOD'] ? -1 : 1)\r\n      }),\r\n      postprocess: () => this.setState(() => ({\r\n        isLoading: false\r\n      }))\r\n    });\r\n  }\r\n\r\n  save = () => {\r\n    this.sas.call({\r\n      program: 'setBenefits',\r\n      tables: {\r\n        'BENEFITS': this.state['BENEFITS'],\r\n        'PARAMS': this.state['PARAMS']\r\n      },\r\n      preprocess: () => this.setState(() => ({\r\n        isLoading: true,\r\n        loadingMessage: 'Mentés'\r\n      })),\r\n      success: () => this.reload,\r\n      postprocess: () => this.setState(() => ({\r\n        isLoading: false\r\n      }))\r\n    });\r\n  }\r\n\r\n  selectGroup = (group) => this.setState(() => ({\r\n    selectedGroup: group\r\n  }))\r\n\r\n  selectBenefit = (benefit) => this.setState(() => ({\r\n    selectedBenefit: benefit\r\n  }))\r\n\r\n  filterData = (data) => data.filter((row) => {\r\n    let keep = true;\r\n\r\n    if (this.props.code === 'BENEFITS') {\r\n      keep =\r\n        this.state.selectedGroup == null ||\r\n        this.state.selectedGroup === '' ||\r\n        this.state.selectedGroup === row['GROUP'];\r\n    } else {\r\n      const benefit = this.state['BENEFITS'].find((benefit) => benefit['ELLATAS_KOD'] === row['ELLATAS_CD']);\r\n\r\n      keep =\r\n        this.state.selectedGroup == null ||\r\n        this.state.selectedGroup === '' ||\r\n        (\r\n          benefit != null &&\r\n          this.state.selectedGroup === benefit['GROUP']\r\n        )\r\n    }\r\n\r\n    return keep && (\r\n      this.state.selectedBenefit == null ||\r\n      this.state.selectedBenefit === '' ||\r\n      this.state.selectedBenefit === row['ELLATAS_CD'] ||\r\n      this.state.selectedBenefit === row['ELLATAS_KOD']\r\n    );\r\n  });\r\n\r\n  getGroupsForSelect = () => {\r\n    return this.state['BENEFITS']\r\n      .sort((b1, b2) => b1['GROUP'] < b2['GROUP'] ? -1 : 1)\r\n      .reduce((groupObject, benefit) => ({\r\n        ...groupObject,\r\n        ...{ [benefit['GROUP']]: benefit['GROUP'] }\r\n      }), {})\r\n  }\r\n\r\n  getBenefitsForSelect = () => {\r\n    return this.state['BENEFITS']\r\n      .filter(benefit => this.state.selectedGroup == null || this.state.selectedGroup === '' || this.state.selectedGroup === benefit['GROUP'])\r\n      .sort((b1, b2) => b1['ELLATAS_NEV'] < b2['ELLATAS_NEV'] ? -1 : 1)\r\n      .reduce((benefitObject, benefit) => ({\r\n        ...benefitObject,\r\n        ...{ [benefit['ELLATAS_KOD']]: benefit['ELLATAS_NEV'] }\r\n      }), {})\r\n  }\r\n\r\n  handleChange = (key, property, value) => {\r\n    const index = this.state[this.props.code].findIndex((row) =>\r\n      row['ELLATAS_KOD'] === key['ELLATAS_KOD'] &&\r\n      row['ELLATAS_CD'] === key['ELLATAS_CD'] &&\r\n      row['NAME'] === key['NAME']\r\n    );\r\n\r\n    const data = this.state[this.props.code].slice();\r\n    data[index][property] = value;\r\n\r\n    this.setState(() => ({\r\n      [this.props.code]: data\r\n    }))\r\n  }\r\n\r\n  prepareCell = (row, column) => {\r\n    const key = {\r\n      'ELLATAS_KOD': row['ELLATAS_KOD'],\r\n      'ELLATAS_CD': row['ELLATAS_CD'],\r\n      'NAME': row['NAME']\r\n    };\r\n\r\n    switch (column) {\r\n      case 'ELLATAS_KOD':\r\n      case 'ELLATAS_CD':\r\n      case 'NAME':\r\n        return row[column];\r\n\r\n\r\n      case 'GROUP':\r\n      case 'ELLATAS_NEV':\r\n      case 'LABEL':\r\n      case 'OPTIONS':\r\n        return (\r\n          <Input\r\n            type=\"C\"\r\n            value={row[column]}\r\n            onChange={(value) => this.handleChange(key, column, value)} />\r\n        );\r\n\r\n\r\n      case 'ORDER':\r\n        return (\r\n          <Input\r\n            type=\"N\"\r\n            value={row[column]}\r\n            onChange={(value) => this.handleChange(key, column, value)} />\r\n        );\r\n\r\n      case 'TYPE':\r\n        return (\r\n          <Select\r\n            name=\"TYPE\"\r\n            defaultOption={{ value: 'N', label: 'Numerikus' }}\r\n            value={row[column]}\r\n            options={{ 'C': 'Karakteres', 'D': 'Dátum', 'S': 'Legördülő' }}\r\n            onChange={(value) => this.handleChange(key, column, value)} />\r\n        );\r\n    }\r\n  }\r\n\r\n  prepareRow = (row) => Object.keys(row).reduce((newRow, column) => ({\r\n    ...newRow,\r\n    ...{ [column]: this.prepareCell(row, column) }\r\n  }), {})\r\n\r\n  prepareData = () => this.filterData(this.state[this.props.code]).map(this.prepareRow)\r\n\r\n  headers = {\r\n    'BENEFITS': [\r\n      { name: 'ELLATAS_KOD', align: 'c', label: 'Ellátás kód' },\r\n      { name: 'GROUP', align: 'c', label: 'Ellátás csoport' },\r\n      { name: 'ELLATAS_NEV', align: 'c', label: 'Ellátás név' }\r\n    ],\r\n\r\n    'PARAMS': [\r\n      { name: 'ELLATAS_CD', align: 'C', label: 'Ellátás kód' },\r\n      { name: 'ORDER', align: 'C', label: 'Sorszám' },\r\n      { name: 'NAME', align: 'C', label: 'Input név' },\r\n      { name: 'TYPE', align: 'C', label: 'Input típus' },\r\n      { name: 'LABEL', align: 'C', label: 'Input felirat' },\r\n      { name: 'OPTIONS', align: 'C', label: 'Legördülő elemei' }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <Loading message={this.state.loadingMessage} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"more\" style={{ height: 500, verticalAlign: 'top', textTransform: 'none' }}>\r\n        <div id=\"t2_content\" style={{ width: '100%', height: '100%', top: 0, position: 'absolute', textAlign: 'left' }}>\r\n          <div style={{ padding: 0, fontSize: '15pt', background: '#ece3c0', marginTop: 2, width: \"100%\" }}>\r\n            <table width=\"100%\" border=\"0\" cellSpacing=\"5\" cellPadding=\"5\">\r\n              <tbody>\r\n                <tr style={{ height: 45 }}>\r\n                  <td style={{ fontSize: '11pt', whiteSpace: 'nowrap' }}>\r\n                    <Select\r\n                      name=\"GROUP\"\r\n                      defaultOption={{ value: '', label: 'Minden csoport' }}\r\n                      onChange={this.selectGroup}\r\n                      value={this.state.selectedGroup}\r\n                      options={this.getGroupsForSelect()} />\r\n                  </td>\r\n                  <td className=\"cell_spacer\">\r\n                  </td>\r\n                  {\r\n\r\n                  }\r\n                  <td style={{ fontSize: '11pt', whiteSpace: 'nowrap' }}>\r\n                    <Select\r\n                      name=\"BENEFIT\"\r\n                      defaultOption={{ value: '', label: 'Minden ellátás' }}\r\n                      onChange={this.selectBenefit}\r\n                      value={this.state.selectedBenefit}\r\n                      options={this.getBenefitsForSelect()} />\r\n                  </td>\r\n                  <td style={{ width: '100%' }} align='right'>\r\n                    <div id=\"btns\" style={{ paddingRight: 10, paddingBottom: 5 }}>\r\n                      <input type=\"button\" className=\"button\" value=\" Mentés \" id=\"newRowBtn\" onClick={this.save} />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div id=\"data2_container\" style={{ margin: '0px auto', width: '100%', bottom: 0, top: 40, position: 'absolute', textAlign: 'left', overflow: 'auto' }} >\r\n            <div style={{ height: '100%', padding: 0 }} >\r\n              <div id=\"data2\" style={{ margin: '0px auto', height: '100%', position: 'relative', width: '100%', textAlign: 'center', overflow: 'auto', display: 'block' }} >\r\n                <Table header={this.headers[this.props.code]} data={this.prepareData()} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsContent;\r\n","import React, { useState } from 'react';\r\nimport SettingsTab from './SettingsTab';\r\nimport SettingsContent from './SettingsContent';\r\n\r\nconst Settings = ({isDebug}) => {\r\n  const [selectedTab, setSelectedTab] = useState('BENEFITS');\r\n\r\n  const menuItems = {\r\n    'BENEFITS': {\r\n      label: 'Ellátások',\r\n      description: 'Ellátások adatai'\r\n    },\r\n    'PARAMS': {\r\n      label: 'Ügyfél inputok',\r\n      description: 'Az ügyfél inputok testre szabása'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"tabs\" id=\"tab_container\">\r\n      <SettingsTab tabs={menuItems} selectedTab={selectedTab} selectTab={setSelectedTab} />\r\n      <SettingsContent code={selectedTab} isDebug={isDebug} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport CalculateBenefits from './components/CalculateBenefits';\r\nimport Scenario from './components/Scenario/Scenario';\r\nimport Settings from './components/Settings';\r\nimport pkg from '../package.json'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: ['BENEFIT', 'SCENARIO', 'SETTINGS'],\r\n      menuDetailes: {\r\n        'BENEFIT': {\r\n          label: 'Egységes ügyfélkép'\r\n        },\r\n        'SCENARIO': {\r\n          label: 'Szcenárióelemzés'\r\n        },\r\n        'SETTINGS': {\r\n          label: 'Beállítások'\r\n        }\r\n      },\r\n      selectedMenu: 'SCENARIO',\r\n      isDebug: true\r\n    };\r\n\r\n    this.version = pkg.version;\r\n  }\r\n\r\n  selectMenu = (code) => this.setState(() => ({\r\n    selectedMenu: code\r\n  }))\r\n\r\n  debugChange = (bool) => this.state(() => ({\r\n    isDebug: bool\r\n  }))\r\n\r\n  content = (code) => {\r\n    switch (code) {\r\n      case 'BENEFIT':\r\n        return <CalculateBenefits isDebug={this.state.isDebug} debugChange={this.debugChange} />;\r\n\r\n      case 'SCENARIO':\r\n        return <Scenario isDebug={this.state.isDebug} debugChange={this.debugChange} />;\r\n\r\n      case 'SETTINGS':\r\n        return <Settings isDebug={this.state.isDebug} debugChange={this.debugChange} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderMenuItem = (code) => {\r\n    const className = code === this.state.selectedMenu\r\n      ? 'nav-item item-210 deeper parent'\r\n      : 'nav-item item-207';\r\n\r\n    const style = code === this.state.selectedMenu\r\n      ? { color: '#deb306' }\r\n      : {};\r\n\r\n    const linkClass = code === this.state.selectedMenu\r\n      ? ''\r\n      : 'nav-link';\r\n\r\n    return (\r\n      <li key={code} className={className} style={{ cursor: 'pointer' }}>\r\n        <a style={style} className={linkClass} name={code} onClick={() => this.selectMenu(code)}>\r\n          {this.state.menuDetailes[code].label}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header className=\"navbar navbar-expand-lg navbar-light bg-faded\">\r\n          <div className=\"container\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n              <ul className=\"menu navbar-nav mr-auto\" id=\"mainmenu\" style={{ paddingTop: 2, paddingBottom: 2 }}>\r\n                <li className=\"nav-item item-207\" >\r\n                  <span style={{ color: 'white' }} >\r\n                    {'v' + this.version}\r\n                  </span>\r\n                </li>\r\n                {this.state.menu.map(this.renderMenuItem)}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"content\">\r\n            {this.content(this.state.selectedMenu)}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}